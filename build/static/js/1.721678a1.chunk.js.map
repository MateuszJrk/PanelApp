{"version":3,"sources":["../node_modules/jvectormap-next/jquery-jvectormap.min.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","apiParams","set","colors","values","backgroundColor","scaleColors","normalizeFunction","focus","get","selectedRegions","selectedMarkers","mapObject","regionName","fn","vectorMap","options","map","this","children","data","jvm","Map","maps","arguments","charAt","toUpperCase","substr","apply","Array","prototype","slice","call","container","jQuery","__webpack_require__","undefined","handler","event","orgEvent","window","args","delta","deltaX","deltaY","absDelta","fix","type","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaMode","lineHeight","pageHeight","Math","max","abs","lowestDelta","shouldAdjustOldDeltas","deltaFactor","unshift","nullLowestDeltaTimeout","clearTimeout","setTimeout","nullLowestDelta","dispatch","handle","special","settings","adjustOldDeltas","toFix","toBind","document","documentMode","fixHooks","i","length","mouseHooks","mousewheel","version","setup","addEventListener","onmousewheel","getLineHeight","getPageHeight","teardown","removeEventListener","elem","parseInt","css","height","extend","bind","trigger","unmousewheel","unbind","exports","module","inherits","child","parent","temp","constructor","parentClass","mixin","target","source","prop","hasOwnProperty","min","Number","MAX_VALUE","MIN_VALUE","keys","object","key","push","whenImageLoaded","url","deferred","Deferred","img","error","reject","load","resolve","attr","isImageUrl","s","test","indexOf","searchElement","fromIndex","k","TypeError","O","Object","len","n","AbstractElement","name","config","node","createElement","properties","property","value","applyAttr","setAttribute","remove","AbstractCanvasElement","width","setSize","rootElement","classPrefix","appendChild","add","element","group","canvas","addPath","style","el","addCircle","addImage","addText","addGroup","parentGroup","AbstractShapeElement","current","isHovered","isSelected","updateStyle","setStyle","styles","attrs","mergeStyles","initial","hover","selected","selectedHover","newStyles","SVGElement","svgns","tagName","createElementNS","addClass","className","getElementCtr","ctr","getBBox","SVGGroupElement","SVGCanvasElement","defsElement","applyTransformParams","scale","transX","transY","SVGShapeElement","patternEl","imageEl","that","images","then","setAttributeNS","imageCounter","SVGPathElement","SVGCircleElement","SVGImageElement","cx","cy","SVGTextElement","textContent","VMLElement","VMLInitialized","initializeVML","namespaces","rvml","e","createStyleSheet","addRule","x","position","left","y","top","VMLGroupElement","coordorigin","VMLCanvasElement","paths","groups","l","coordsize","getElementsByTagName","VMLShapeElement","fillElement","strokeElement","stroked","fillcolor","opacity","round","strokecolor","strokeweight","path","VMLPathElement","pathSvgToVml","on","matrix","offset","ctrlx","ctrly","replace","segment","letter","coords","split","shift","join","VMLCircleElement","VectorCanvas","mode","SVGAngle","impl","SimpleScale","getValue","OrdinalScale","getTicks","ticks","label","NumericScale","minValue","maxValue","setScale","setNormalizeFunction","setMin","setMax","clearMinValue","normalize","clearMaxValue","f","pow","c","lengthes","fullLength","vectorLength","vectorSubtract","vectorToNum","vectorAdd","vectorMult","vector","num","vector1","vector2","result","sqrt","tick","v","extent","span","step","floor","log","LN10","err","ceil","ColorScale","rgbToArray","numToRgb","arrayToRgb","ar","d","rgb","toString","Legend","params","series","body","cssClass","vertical","legendCntVertical","append","legendCntHorizontal","render","sample","inner","html","title","attribute","border-radius","border","markerStyle","stroke","background","fill","appendTo","labelRender","DataSeries","elements","scaleConstructor","attributes","setAttributes","isArray","setValues","legend","code","val","cc","parseFloat","isNaN","clear","shape","Proj","degRad","PI","radDeg","radius","sgn","mill","lat","lng","tan","mill_inv","atan","exp","merc","merc_inv","aea","lambda0","fi1","fi2","fi","lambda","sin","C","cos","theta","ro","ro0","aea_inv","xCoord","yCoord","asin","lcc","F","fi0","lcc_inv","MapObject","getLabelText","getLabelOffsets","offsets","setHovered","setSelected","Region","bbox","text","wrapper","data-code","stroke-width","margin","labelX","labelY","text-anchor","alignment-baseline","labelStyle","labelsGroup","updateLabelPosition","Marker","isImage","image","createShape","index","data-index","dy","r","defaultParams","Error","mapData","markers","regions","regionsColors","regionsData","defaultWidth","defaultHeight","setBackgroundColor","onResize","updateSize","resize","apiEvents","bindTouchEvents","DocumentTouch","bindContainerTouchEvents","MSGesture","bindContainerPointerEvents","bindContainerEvents","bindElementEvents","createTip","zoomButtons","bindZoomButtons","createRegions","createMarkers","focusOn","region","setFocus","setSelectedRegions","setSelectedMarkers","createSeries","baseTransX","baseTransY","baseScale","curBaseScale","applyTransform","reset","maxTransX","maxTransY","minTransX","minTransY","repositionMarkers","repositionLabels","oldPageX","oldPageY","mouseDown","panOnDrag","mousemove","pageX","pageY","mousedown","onContainerMouseUp","mouseup","zoomOnScroll","centerX","centerY","zoomStep","zoomOnScrollSpeed","tip","hide","preventDefault","touchStartScale","touchStartDistance","touchX","touchY","centerTouchX","centerTouchY","lastTouchesLength","handleTouchEvent","transXOld","transYOld","touches","originalEvent","gesture","translationX","translationY","offsetX","offsetY","addPointer","pointerId","mouseMoved","delegate","baseVal","tipText","tipShowEvent","Event","overEvent","isDefaultPrevented","show","tipWidth","tipHeight","clickEvent","regionsSelectable","markersSelectable","clearSelected","find","click","zoomAnimate","anchorX","anchorY","isCentered","animate","interval","scaleStart","scaleDiff","transXStart","transXDiff","transYStart","transYDiff","viewportChangeEvent","count","zoomMax","zoomMin","setInterval","clearInterval","itemBbox","codes","point","latLngToPoint","getSelected","getSelectedRegions","getSelectedMarkers","select","clearSelectedRegions","clearSelectedMarkers","getMapObject","getRegionName","regionLabelsGroup","regionStyle","regionMargin","regionLabelStyle","labels","marker","markerConfig","markersArray","markersGroup","markerLabelsGroup","latLng","getMarkerPosition","markerLabelStyle","removeMarkers","projection","addMarker","seriesData","addMarkers","removeAllMarkers","inset","proj","centralMeridian","getInsetForPoint","pointToLatLng","nx","ny","insets","fill-opacity","stroke-opacity","cursor","font-family","font-size","font-weight","onRegionTipShow","onRegionOver","onRegionOut","onRegionClick","onRegionSelected","onMarkerTipShow","onMarkerOver","onMarkerOut","onMarkerClick","onMarkerSelected","onViewportChange","MultiMap","maxLevel","main","multiMapLevel","history","addMap","defaultProjection","mapsLoaded","backButton","goBack","spinner","cnt","scope","multimap","mapName","mapNameByCode","drillDownPromise","state","drillDown","downloadMap","mapUrlByCode","currentMap","focusPromise","downloadPromise","always","when","pop","prevMap","multiMap","toLowerCase"],"mappings":"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","file":"static/js/1.721678a1.chunk.js","sourcesContent":["!function ($) {\n  var apiParams = {\n    set: {\n      colors: 1,\n      values: 1,\n      backgroundColor: 1,\n      scaleColors: 1,\n      normalizeFunction: 1,\n      focus: 1\n    },\n    get: {\n      selectedRegions: 1,\n      selectedMarkers: 1,\n      mapObject: 1,\n      regionName: 1\n    }\n  };\n\n  $.fn.vectorMap = function (options) {\n    var map,\n        methodName,\n        map = this.children(\".jvectormap-container\").data(\"mapObject\");\n    if (\"addMap\" === options) jvm.Map.maps[arguments[1]] = arguments[2];else {\n      if ((\"set\" === options || \"get\" === options) && apiParams[options][arguments[1]]) return methodName = arguments[1].charAt(0).toUpperCase() + arguments[1].substr(1), map[options + methodName].apply(map, Array.prototype.slice.call(arguments, 2));\n      options = options || {}, options.container = this, map = new jvm.Map(options);\n    }\n    return this;\n  };\n}(jQuery), function (factory) {\n  \"function\" == typeof define && define.amd ? define([\"jquery\"], factory) : \"object\" == typeof exports ? module.exports = factory : factory(jQuery);\n}(function ($) {\n  function handler(event) {\n    var orgEvent = event || window.event,\n        args = slice.call(arguments, 1),\n        delta = 0,\n        deltaX = 0,\n        deltaY = 0,\n        absDelta = 0;\n\n    if (event = $.event.fix(orgEvent), event.type = \"mousewheel\", \"detail\" in orgEvent && (deltaY = -1 * orgEvent.detail), \"wheelDelta\" in orgEvent && (deltaY = orgEvent.wheelDelta), \"wheelDeltaY\" in orgEvent && (deltaY = orgEvent.wheelDeltaY), \"wheelDeltaX\" in orgEvent && (deltaX = -1 * orgEvent.wheelDeltaX), \"axis\" in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS && (deltaX = -1 * deltaY, deltaY = 0), delta = 0 === deltaY ? deltaX : deltaY, \"deltaY\" in orgEvent && (deltaY = -1 * orgEvent.deltaY, delta = deltaY), \"deltaX\" in orgEvent && (deltaX = orgEvent.deltaX, 0 === deltaY && (delta = -1 * deltaX)), 0 !== deltaY || 0 !== deltaX) {\n      if (1 === orgEvent.deltaMode) {\n        var lineHeight = $.data(this, \"mousewheel-line-height\");\n        delta *= lineHeight, deltaY *= lineHeight, deltaX *= lineHeight;\n      } else if (2 === orgEvent.deltaMode) {\n        var pageHeight = $.data(this, \"mousewheel-page-height\");\n        delta *= pageHeight, deltaY *= pageHeight, deltaX *= pageHeight;\n      }\n\n      return absDelta = Math.max(Math.abs(deltaY), Math.abs(deltaX)), (!lowestDelta || lowestDelta > absDelta) && (lowestDelta = absDelta, shouldAdjustOldDeltas(orgEvent, absDelta) && (lowestDelta /= 40)), shouldAdjustOldDeltas(orgEvent, absDelta) && (delta /= 40, deltaX /= 40, deltaY /= 40), delta = Math[delta >= 1 ? \"floor\" : \"ceil\"](delta / lowestDelta), deltaX = Math[deltaX >= 1 ? \"floor\" : \"ceil\"](deltaX / lowestDelta), deltaY = Math[deltaY >= 1 ? \"floor\" : \"ceil\"](deltaY / lowestDelta), event.deltaX = deltaX, event.deltaY = deltaY, event.deltaFactor = lowestDelta, event.deltaMode = 0, args.unshift(event, delta, deltaX, deltaY), nullLowestDeltaTimeout && clearTimeout(nullLowestDeltaTimeout), nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200), ($.event.dispatch || $.event.handle).apply(this, args);\n    }\n  }\n\n  function nullLowestDelta() {\n    lowestDelta = null;\n  }\n\n  function shouldAdjustOldDeltas(orgEvent, absDelta) {\n    return special.settings.adjustOldDeltas && \"mousewheel\" === orgEvent.type && absDelta % 120 === 0;\n  }\n\n  var nullLowestDeltaTimeout,\n      lowestDelta,\n      toFix = [\"wheel\", \"mousewheel\", \"DOMMouseScroll\", \"MozMousePixelScroll\"],\n      toBind = \"onwheel\" in document || document.documentMode >= 9 ? [\"wheel\"] : [\"mousewheel\", \"DomMouseScroll\", \"MozMousePixelScroll\"],\n      slice = Array.prototype.slice;\n  if ($.event.fixHooks) for (var i = toFix.length; i;) {\n    $.event.fixHooks[toFix[--i]] = $.event.mouseHooks;\n  }\n  var special = $.event.special.mousewheel = {\n    version: \"3.1.9\",\n    setup: function setup() {\n      if (this.addEventListener) for (var i = toBind.length; i;) {\n        this.addEventListener(toBind[--i], handler, !1);\n      } else this.onmousewheel = handler;\n      $.data(this, \"mousewheel-line-height\", special.getLineHeight(this)), $.data(this, \"mousewheel-page-height\", special.getPageHeight(this));\n    },\n    teardown: function teardown() {\n      if (this.removeEventListener) for (var i = toBind.length; i;) {\n        this.removeEventListener(toBind[--i], handler, !1);\n      } else this.onmousewheel = null;\n    },\n    getLineHeight: function getLineHeight(elem) {\n      return parseInt($(elem)[\"offsetParent\" in $.fn ? \"offsetParent\" : \"parent\"]().css(\"fontSize\"), 10);\n    },\n    getPageHeight: function getPageHeight(elem) {\n      return $(elem).height();\n    },\n    settings: {\n      adjustOldDeltas: !0\n    }\n  };\n  $.fn.extend({\n    mousewheel: function mousewheel(fn) {\n      return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n    },\n    unmousewheel: function unmousewheel(fn) {\n      return this.unbind(\"mousewheel\", fn);\n    }\n  });\n});\nvar jvm = {\n  inherits: function inherits(child, parent) {\n    function temp() {}\n\n    temp.prototype = parent.prototype, child.prototype = new temp(), child.prototype.constructor = child, child.parentClass = parent;\n  },\n  mixin: function mixin(target, source) {\n    var prop;\n\n    for (prop in source.prototype) {\n      source.prototype.hasOwnProperty(prop) && (target.prototype[prop] = source.prototype[prop]);\n    }\n  },\n  min: function min(values) {\n    var i,\n        min = Number.MAX_VALUE;\n    if (values instanceof Array) for (i = 0; i < values.length; i++) {\n      values[i] < min && (min = values[i]);\n    } else for (i in values) {\n      values[i] < min && (min = values[i]);\n    }\n    return min;\n  },\n  max: function max(values) {\n    var i,\n        max = Number.MIN_VALUE;\n    if (values instanceof Array) for (i = 0; i < values.length; i++) {\n      values[i] > max && (max = values[i]);\n    } else for (i in values) {\n      values[i] > max && (max = values[i]);\n    }\n    return max;\n  },\n  keys: function keys(object) {\n    var key,\n        keys = [];\n\n    for (key in object) {\n      keys.push(key);\n    }\n\n    return keys;\n  },\n  values: function values(object) {\n    var key,\n        i,\n        values = [];\n\n    for (i = 0; i < arguments.length; i++) {\n      object = arguments[i];\n\n      for (key in object) {\n        values.push(object[key]);\n      }\n    }\n\n    return values;\n  },\n  whenImageLoaded: function whenImageLoaded(url) {\n    var deferred = new jvm.$.Deferred(),\n        img = jvm.$(\"<img/>\");\n    return img.error(function () {\n      deferred.reject();\n    }).load(function () {\n      deferred.resolve(img);\n    }), img.attr(\"src\", url), deferred;\n  },\n  isImageUrl: function isImageUrl(s) {\n    return /\\.\\w{3,4}$/.test(s);\n  }\n};\njvm.$ = jQuery, Array.prototype.indexOf || (Array.prototype.indexOf = function (searchElement, fromIndex) {\n  var k;\n  if (null == this) throw new TypeError('\"this\" is null or not defined');\n  var O = Object(this),\n      len = O.length >>> 0;\n  if (0 === len) return -1;\n  var n = +fromIndex || 0;\n  if (Math.abs(n) === 1 / 0 && (n = 0), n >= len) return -1;\n\n  for (k = Math.max(n >= 0 ? n : len - Math.abs(n), 0); len > k;) {\n    if (k in O && O[k] === searchElement) return k;\n    k++;\n  }\n\n  return -1;\n}), jvm.AbstractElement = function (name, config) {\n  this.node = this.createElement(name), this.name = name, this.properties = {}, config && this.set(config);\n}, jvm.AbstractElement.prototype.set = function (property, value) {\n  var key;\n  if (\"object\" == typeof property) for (key in property) {\n    this.properties[key] = property[key], this.applyAttr(key, property[key]);\n  } else this.properties[property] = value, this.applyAttr(property, value);\n}, jvm.AbstractElement.prototype.get = function (property) {\n  return this.properties[property];\n}, jvm.AbstractElement.prototype.applyAttr = function (property, value) {\n  this.node.setAttribute(property, value);\n}, jvm.AbstractElement.prototype.remove = function () {\n  jvm.$(this.node).remove();\n}, jvm.AbstractCanvasElement = function (container, width, height) {\n  this.container = container, this.setSize(width, height), this.rootElement = new jvm[this.classPrefix + \"GroupElement\"](), this.node.appendChild(this.rootElement.node), this.container.appendChild(this.node);\n}, jvm.AbstractCanvasElement.prototype.add = function (element, group) {\n  group = group || this.rootElement, group.add(element), element.canvas = this;\n}, jvm.AbstractCanvasElement.prototype.addPath = function (config, style, group) {\n  var el = new jvm[this.classPrefix + \"PathElement\"](config, style);\n  return this.add(el, group), el;\n}, jvm.AbstractCanvasElement.prototype.addCircle = function (config, style, group) {\n  var el = new jvm[this.classPrefix + \"CircleElement\"](config, style);\n  return this.add(el, group), el;\n}, jvm.AbstractCanvasElement.prototype.addImage = function (config, style, group) {\n  var el = new jvm[this.classPrefix + \"ImageElement\"](config, style);\n  return this.add(el, group), el;\n}, jvm.AbstractCanvasElement.prototype.addText = function (config, style, group) {\n  var el = new jvm[this.classPrefix + \"TextElement\"](config, style);\n  return this.add(el, group), el;\n}, jvm.AbstractCanvasElement.prototype.addGroup = function (parentGroup) {\n  var el = new jvm[this.classPrefix + \"GroupElement\"]();\n  return parentGroup ? parentGroup.node.appendChild(el.node) : this.node.appendChild(el.node), el.canvas = this, el;\n}, jvm.AbstractShapeElement = function (name, config, style) {\n  this.style = style || {}, this.style.current = this.style.current || {}, this.isHovered = !1, this.isSelected = !1, this.updateStyle();\n}, jvm.AbstractShapeElement.prototype.setStyle = function (property, value) {\n  var styles = {};\n  \"object\" == typeof property ? styles = property : styles[property] = value, jvm.$.extend(this.style.current, styles), this.updateStyle();\n}, jvm.AbstractShapeElement.prototype.updateStyle = function () {\n  var attrs = {};\n  jvm.AbstractShapeElement.mergeStyles(attrs, this.style.initial), jvm.AbstractShapeElement.mergeStyles(attrs, this.style.current), this.isHovered && jvm.AbstractShapeElement.mergeStyles(attrs, this.style.hover), this.isSelected && (jvm.AbstractShapeElement.mergeStyles(attrs, this.style.selected), this.isHovered && jvm.AbstractShapeElement.mergeStyles(attrs, this.style.selectedHover)), this.set(attrs);\n}, jvm.AbstractShapeElement.mergeStyles = function (styles, newStyles) {\n  var key;\n  newStyles = newStyles || {};\n\n  for (key in newStyles) {\n    null === newStyles[key] ? delete styles[key] : styles[key] = newStyles[key];\n  }\n}, jvm.SVGElement = function () {\n  jvm.SVGElement.parentClass.apply(this, arguments);\n}, jvm.inherits(jvm.SVGElement, jvm.AbstractElement), jvm.SVGElement.svgns = \"http://www.w3.org/2000/svg\", jvm.SVGElement.prototype.createElement = function (tagName) {\n  return document.createElementNS(jvm.SVGElement.svgns, tagName);\n}, jvm.SVGElement.prototype.addClass = function (className) {\n  this.node.setAttribute(\"class\", className);\n}, jvm.SVGElement.prototype.getElementCtr = function (ctr) {\n  return jvm[\"SVG\" + ctr];\n}, jvm.SVGElement.prototype.getBBox = function () {\n  return this.node.getBBox();\n}, jvm.SVGGroupElement = function () {\n  jvm.SVGGroupElement.parentClass.call(this, \"g\");\n}, jvm.inherits(jvm.SVGGroupElement, jvm.SVGElement), jvm.SVGGroupElement.prototype.add = function (element) {\n  this.node.appendChild(element.node);\n}, jvm.SVGCanvasElement = function () {\n  this.classPrefix = \"SVG\", jvm.SVGCanvasElement.parentClass.call(this, \"svg\"), this.defsElement = new jvm.SVGElement(\"defs\"), this.node.appendChild(this.defsElement.node), jvm.AbstractCanvasElement.apply(this, arguments);\n}, jvm.inherits(jvm.SVGCanvasElement, jvm.SVGElement), jvm.mixin(jvm.SVGCanvasElement, jvm.AbstractCanvasElement), jvm.SVGCanvasElement.prototype.setSize = function (width, height) {\n  this.width = width, this.height = height, this.node.setAttribute(\"width\", width), this.node.setAttribute(\"height\", height);\n}, jvm.SVGCanvasElement.prototype.applyTransformParams = function (scale, transX, transY) {\n  this.scale = scale, this.transX = transX, this.transY = transY, this.rootElement.node.setAttribute(\"transform\", \"scale(\" + scale + \") translate(\" + transX + \", \" + transY + \")\");\n}, jvm.SVGShapeElement = function (name, config) {\n  jvm.SVGShapeElement.parentClass.call(this, name, config), jvm.AbstractShapeElement.apply(this, arguments);\n}, jvm.inherits(jvm.SVGShapeElement, jvm.SVGElement), jvm.mixin(jvm.SVGShapeElement, jvm.AbstractShapeElement), jvm.SVGShapeElement.prototype.applyAttr = function (attr, value) {\n  var patternEl,\n      imageEl,\n      that = this;\n  \"fill\" === attr && jvm.isImageUrl(value) ? jvm.SVGShapeElement.images[value] ? this.applyAttr(\"fill\", \"url(#image\" + jvm.SVGShapeElement.images[value] + \")\") : jvm.whenImageLoaded(value).then(function (img) {\n    imageEl = new jvm.SVGElement(\"image\"), imageEl.node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", value), imageEl.applyAttr(\"x\", \"0\"), imageEl.applyAttr(\"y\", \"0\"), imageEl.applyAttr(\"width\", img[0].width), imageEl.applyAttr(\"height\", img[0].height), patternEl = new jvm.SVGElement(\"pattern\"), patternEl.applyAttr(\"id\", \"image\" + jvm.SVGShapeElement.imageCounter), patternEl.applyAttr(\"x\", 0), patternEl.applyAttr(\"y\", 0), patternEl.applyAttr(\"width\", img[0].width / 2), patternEl.applyAttr(\"height\", img[0].height / 2), patternEl.applyAttr(\"viewBox\", \"0 0 \" + img[0].width + \" \" + img[0].height), patternEl.applyAttr(\"patternUnits\", \"userSpaceOnUse\"), patternEl.node.appendChild(imageEl.node), that.canvas.defsElement.node.appendChild(patternEl.node), jvm.SVGShapeElement.images[value] = jvm.SVGShapeElement.imageCounter++, that.applyAttr(\"fill\", \"url(#image\" + jvm.SVGShapeElement.images[value] + \")\");\n  }) : jvm.SVGShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);\n}, jvm.SVGShapeElement.imageCounter = 1, jvm.SVGShapeElement.images = {}, jvm.SVGPathElement = function (config, style) {\n  jvm.SVGPathElement.parentClass.call(this, \"path\", config, style), this.node.setAttribute(\"fill-rule\", \"evenodd\");\n}, jvm.inherits(jvm.SVGPathElement, jvm.SVGShapeElement), jvm.SVGCircleElement = function (config, style) {\n  jvm.SVGCircleElement.parentClass.call(this, \"circle\", config, style);\n}, jvm.inherits(jvm.SVGCircleElement, jvm.SVGShapeElement), jvm.SVGImageElement = function (config, style) {\n  jvm.SVGImageElement.parentClass.call(this, \"image\", config, style);\n}, jvm.inherits(jvm.SVGImageElement, jvm.SVGShapeElement), jvm.SVGImageElement.prototype.applyAttr = function (attr, value) {\n  var that = this;\n  \"image\" == attr ? jvm.whenImageLoaded(value).then(function (img) {\n    that.node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", value), that.width = img[0].width, that.height = img[0].height, that.applyAttr(\"width\", that.width), that.applyAttr(\"height\", that.height), that.applyAttr(\"x\", that.cx - that.width / 2), that.applyAttr(\"y\", that.cy - that.height / 2), jvm.$(that.node).trigger(\"imageloaded\", [img]);\n  }) : \"cx\" == attr ? (this.cx = value, this.width && this.applyAttr(\"x\", value - this.width / 2)) : \"cy\" == attr ? (this.cy = value, this.height && this.applyAttr(\"y\", value - this.height / 2)) : jvm.SVGImageElement.parentClass.prototype.applyAttr.apply(this, arguments);\n}, jvm.SVGTextElement = function (config, style) {\n  jvm.SVGTextElement.parentClass.call(this, \"text\", config, style);\n}, jvm.inherits(jvm.SVGTextElement, jvm.SVGShapeElement), jvm.SVGTextElement.prototype.applyAttr = function (attr, value) {\n  \"text\" === attr ? this.node.textContent = value : jvm.SVGTextElement.parentClass.prototype.applyAttr.apply(this, arguments);\n}, jvm.VMLElement = function () {\n  jvm.VMLElement.VMLInitialized || jvm.VMLElement.initializeVML(), jvm.VMLElement.parentClass.apply(this, arguments);\n}, jvm.inherits(jvm.VMLElement, jvm.AbstractElement), jvm.VMLElement.VMLInitialized = !1, jvm.VMLElement.initializeVML = function () {\n  try {\n    document.namespaces.rvml || document.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\"), jvm.VMLElement.prototype.createElement = function (tagName) {\n      return document.createElement(\"<rvml:\" + tagName + ' class=\"rvml\">');\n    };\n  } catch (e) {\n    jvm.VMLElement.prototype.createElement = function (tagName) {\n      return document.createElement(\"<\" + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n    };\n  }\n\n  document.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\"), jvm.VMLElement.VMLInitialized = !0;\n}, jvm.VMLElement.prototype.getElementCtr = function (ctr) {\n  return jvm[\"VML\" + ctr];\n}, jvm.VMLElement.prototype.addClass = function (className) {\n  jvm.$(this.node).addClass(className);\n}, jvm.VMLElement.prototype.applyAttr = function (attr, value) {\n  this.node[attr] = value;\n}, jvm.VMLElement.prototype.getBBox = function () {\n  var node = jvm.$(this.node);\n  return {\n    x: node.position().left / this.canvas.scale,\n    y: node.position().top / this.canvas.scale,\n    width: node.width() / this.canvas.scale,\n    height: node.height() / this.canvas.scale\n  };\n}, jvm.VMLGroupElement = function () {\n  jvm.VMLGroupElement.parentClass.call(this, \"group\"), this.node.style.left = \"0px\", this.node.style.top = \"0px\", this.node.coordorigin = \"0 0\";\n}, jvm.inherits(jvm.VMLGroupElement, jvm.VMLElement), jvm.VMLGroupElement.prototype.add = function (element) {\n  this.node.appendChild(element.node);\n}, jvm.VMLCanvasElement = function () {\n  this.classPrefix = \"VML\", jvm.VMLCanvasElement.parentClass.call(this, \"group\"), jvm.AbstractCanvasElement.apply(this, arguments), this.node.style.position = \"absolute\";\n}, jvm.inherits(jvm.VMLCanvasElement, jvm.VMLElement), jvm.mixin(jvm.VMLCanvasElement, jvm.AbstractCanvasElement), jvm.VMLCanvasElement.prototype.setSize = function (width, height) {\n  var paths, groups, i, l;\n\n  if (this.width = width, this.height = height, this.node.style.width = width + \"px\", this.node.style.height = height + \"px\", this.node.coordsize = width + \" \" + height, this.node.coordorigin = \"0 0\", this.rootElement) {\n    for (paths = this.rootElement.node.getElementsByTagName(\"shape\"), i = 0, l = paths.length; l > i; i++) {\n      paths[i].coordsize = width + \" \" + height, paths[i].style.width = width + \"px\", paths[i].style.height = height + \"px\";\n    }\n\n    for (groups = this.node.getElementsByTagName(\"group\"), i = 0, l = groups.length; l > i; i++) {\n      groups[i].coordsize = width + \" \" + height, groups[i].style.width = width + \"px\", groups[i].style.height = height + \"px\";\n    }\n  }\n}, jvm.VMLCanvasElement.prototype.applyTransformParams = function (scale, transX, transY) {\n  this.scale = scale, this.transX = transX, this.transY = transY, this.rootElement.node.coordorigin = this.width - transX - this.width / 100 + \",\" + (this.height - transY - this.height / 100), this.rootElement.node.coordsize = this.width / scale + \",\" + this.height / scale;\n}, jvm.VMLShapeElement = function (name, config) {\n  jvm.VMLShapeElement.parentClass.call(this, name, config), this.fillElement = new jvm.VMLElement(\"fill\"), this.strokeElement = new jvm.VMLElement(\"stroke\"), this.node.appendChild(this.fillElement.node), this.node.appendChild(this.strokeElement.node), this.node.stroked = !1, jvm.AbstractShapeElement.apply(this, arguments);\n}, jvm.inherits(jvm.VMLShapeElement, jvm.VMLElement), jvm.mixin(jvm.VMLShapeElement, jvm.AbstractShapeElement), jvm.VMLShapeElement.prototype.applyAttr = function (attr, value) {\n  switch (attr) {\n    case \"fill\":\n      this.node.fillcolor = value;\n      break;\n\n    case \"fill-opacity\":\n      this.fillElement.node.opacity = Math.round(100 * value) + \"%\";\n      break;\n\n    case \"stroke\":\n      this.node.stroked = \"none\" === value ? !1 : !0, this.node.strokecolor = value;\n      break;\n\n    case \"stroke-opacity\":\n      this.strokeElement.node.opacity = Math.round(100 * value) + \"%\";\n      break;\n\n    case \"stroke-width\":\n      this.node.stroked = 0 === parseInt(value, 10) ? !1 : !0, this.node.strokeweight = value;\n      break;\n\n    case \"d\":\n      this.node.path = jvm.VMLPathElement.pathSvgToVml(value);\n      break;\n\n    default:\n      jvm.VMLShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);\n  }\n}, jvm.VMLPathElement = function (config, style) {\n  var scale = new jvm.VMLElement(\"skew\");\n  jvm.VMLPathElement.parentClass.call(this, \"shape\", config, style), this.node.coordorigin = \"0 0\", scale.node.on = !0, scale.node.matrix = \"0.01,0,0,0.01,0,0\", scale.node.offset = \"0,0\", this.node.appendChild(scale.node);\n}, jvm.inherits(jvm.VMLPathElement, jvm.VMLShapeElement), jvm.VMLPathElement.prototype.applyAttr = function (attr, value) {\n  \"d\" === attr ? this.node.path = jvm.VMLPathElement.pathSvgToVml(value) : jvm.VMLShapeElement.prototype.applyAttr.call(this, attr, value);\n}, jvm.VMLPathElement.pathSvgToVml = function (path) {\n  var ctrlx,\n      ctrly,\n      cx = 0,\n      cy = 0;\n  return path = path.replace(/(-?\\d+)e(-?\\d+)/g, \"0\"), path.replace(/([MmLlHhVvCcSs])\\s*((?:-?\\d*(?:\\.\\d+)?\\s*,?\\s*)+)/g, function (segment, letter, coords) {\n    coords = coords.replace(/(\\d)-/g, \"$1,-\").replace(/^\\s+/g, \"\").replace(/\\s+$/g, \"\").replace(/\\s+/g, \",\").split(\",\"), coords[0] || coords.shift();\n\n    for (var i = 0, l = coords.length; l > i; i++) {\n      coords[i] = Math.round(100 * coords[i]);\n    }\n\n    switch (letter) {\n      case \"m\":\n        return cx += coords[0], cy += coords[1], \"t\" + coords.join(\",\");\n\n      case \"M\":\n        return cx = coords[0], cy = coords[1], \"m\" + coords.join(\",\");\n\n      case \"l\":\n        return cx += coords[0], cy += coords[1], \"r\" + coords.join(\",\");\n\n      case \"L\":\n        return cx = coords[0], cy = coords[1], \"l\" + coords.join(\",\");\n\n      case \"h\":\n        return cx += coords[0], \"r\" + coords[0] + \",0\";\n\n      case \"H\":\n        return cx = coords[0], \"l\" + cx + \",\" + cy;\n\n      case \"v\":\n        return cy += coords[0], \"r0,\" + coords[0];\n\n      case \"V\":\n        return cy = coords[0], \"l\" + cx + \",\" + cy;\n\n      case \"c\":\n        return ctrlx = cx + coords[coords.length - 4], ctrly = cy + coords[coords.length - 3], cx += coords[coords.length - 2], cy += coords[coords.length - 1], \"v\" + coords.join(\",\");\n\n      case \"C\":\n        return ctrlx = coords[coords.length - 4], ctrly = coords[coords.length - 3], cx = coords[coords.length - 2], cy = coords[coords.length - 1], \"c\" + coords.join(\",\");\n\n      case \"s\":\n        return coords.unshift(cy - ctrly), coords.unshift(cx - ctrlx), ctrlx = cx + coords[coords.length - 4], ctrly = cy + coords[coords.length - 3], cx += coords[coords.length - 2], cy += coords[coords.length - 1], \"v\" + coords.join(\",\");\n\n      case \"S\":\n        return coords.unshift(cy + cy - ctrly), coords.unshift(cx + cx - ctrlx), ctrlx = coords[coords.length - 4], ctrly = coords[coords.length - 3], cx = coords[coords.length - 2], cy = coords[coords.length - 1], \"c\" + coords.join(\",\");\n    }\n\n    return \"\";\n  }).replace(/z/g, \"e\");\n}, jvm.VMLCircleElement = function (config, style) {\n  jvm.VMLCircleElement.parentClass.call(this, \"oval\", config, style);\n}, jvm.inherits(jvm.VMLCircleElement, jvm.VMLShapeElement), jvm.VMLCircleElement.prototype.applyAttr = function (attr, value) {\n  switch (attr) {\n    case \"r\":\n      this.node.style.width = 2 * value + \"px\", this.node.style.height = 2 * value + \"px\", this.applyAttr(\"cx\", this.get(\"cx\") || 0), this.applyAttr(\"cy\", this.get(\"cy\") || 0);\n      break;\n\n    case \"cx\":\n      if (!value) return;\n      this.node.style.left = value - (this.get(\"r\") || 0) + \"px\";\n      break;\n\n    case \"cy\":\n      if (!value) return;\n      this.node.style.top = value - (this.get(\"r\") || 0) + \"px\";\n      break;\n\n    default:\n      jvm.VMLCircleElement.parentClass.prototype.applyAttr.call(this, attr, value);\n  }\n}, jvm.VectorCanvas = function (container, width, height) {\n  return this.mode = window.SVGAngle ? \"svg\" : \"vml\", this.impl = \"svg\" == this.mode ? new jvm.SVGCanvasElement(container, width, height) : new jvm.VMLCanvasElement(container, width, height), this.impl.mode = this.mode, this.impl;\n}, jvm.SimpleScale = function (scale) {\n  this.scale = scale;\n}, jvm.SimpleScale.prototype.getValue = function (value) {\n  return value;\n}, jvm.OrdinalScale = function (scale) {\n  this.scale = scale;\n}, jvm.OrdinalScale.prototype.getValue = function (value) {\n  return this.scale[value];\n}, jvm.OrdinalScale.prototype.getTicks = function () {\n  var key,\n      ticks = [];\n\n  for (key in this.scale) {\n    ticks.push({\n      label: key,\n      value: this.scale[key]\n    });\n  }\n\n  return ticks;\n}, jvm.NumericScale = function (scale, normalizeFunction, minValue, maxValue) {\n  this.scale = [], normalizeFunction = normalizeFunction || \"linear\", scale && this.setScale(scale), normalizeFunction && this.setNormalizeFunction(normalizeFunction), \"undefined\" != typeof minValue && this.setMin(minValue), \"undefined\" != typeof maxValue && this.setMax(maxValue);\n}, jvm.NumericScale.prototype = {\n  setMin: function setMin(min) {\n    this.clearMinValue = min, this.minValue = \"function\" == typeof this.normalize ? this.normalize(min) : min;\n  },\n  setMax: function setMax(max) {\n    this.clearMaxValue = max, this.maxValue = \"function\" == typeof this.normalize ? this.normalize(max) : max;\n  },\n  setScale: function setScale(scale) {\n    var i;\n\n    for (this.scale = [], i = 0; i < scale.length; i++) {\n      this.scale[i] = [scale[i]];\n    }\n  },\n  setNormalizeFunction: function setNormalizeFunction(f) {\n    \"polynomial\" === f ? this.normalize = function (value) {\n      return Math.pow(value, .2);\n    } : \"linear\" === f ? delete this.normalize : this.normalize = f, this.setMin(this.clearMinValue), this.setMax(this.clearMaxValue);\n  },\n  getValue: function getValue(value) {\n    var l,\n        c,\n        lengthes = [],\n        fullLength = 0,\n        i = 0;\n\n    for (\"function\" == typeof this.normalize && (value = this.normalize(value)), i = 0; i < this.scale.length - 1; i++) {\n      l = this.vectorLength(this.vectorSubtract(this.scale[i + 1], this.scale[i])), lengthes.push(l), fullLength += l;\n    }\n\n    for (c = (this.maxValue - this.minValue) / fullLength, i = 0; i < lengthes.length; i++) {\n      lengthes[i] *= c;\n    }\n\n    for (i = 0, value -= this.minValue; value - lengthes[i] >= 0;) {\n      value -= lengthes[i], i++;\n    }\n\n    return value = this.vectorToNum(i == this.scale.length - 1 ? this.scale[i] : this.vectorAdd(this.scale[i], this.vectorMult(this.vectorSubtract(this.scale[i + 1], this.scale[i]), value / lengthes[i])));\n  },\n  vectorToNum: function vectorToNum(vector) {\n    var i,\n        num = 0;\n\n    for (i = 0; i < vector.length; i++) {\n      num += Math.round(vector[i]) * Math.pow(256, vector.length - i - 1);\n    }\n\n    return num;\n  },\n  vectorSubtract: function vectorSubtract(vector1, vector2) {\n    var i,\n        vector = [];\n\n    for (i = 0; i < vector1.length; i++) {\n      vector[i] = vector1[i] - vector2[i];\n    }\n\n    return vector;\n  },\n  vectorAdd: function vectorAdd(vector1, vector2) {\n    var i,\n        vector = [];\n\n    for (i = 0; i < vector1.length; i++) {\n      vector[i] = vector1[i] + vector2[i];\n    }\n\n    return vector;\n  },\n  vectorMult: function vectorMult(vector, num) {\n    var i,\n        result = [];\n\n    for (i = 0; i < vector.length; i++) {\n      result[i] = vector[i] * num;\n    }\n\n    return result;\n  },\n  vectorLength: function vectorLength(vector) {\n    var i,\n        result = 0;\n\n    for (i = 0; i < vector.length; i++) {\n      result += vector[i] * vector[i];\n    }\n\n    return Math.sqrt(result);\n  },\n  getTicks: function getTicks() {\n    var tick,\n        v,\n        m = 5,\n        extent = [this.clearMinValue, this.clearMaxValue],\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step,\n        ticks = [];\n\n    for (.15 >= err ? step *= 10 : .35 >= err ? step *= 5 : .75 >= err && (step *= 2), extent[0] = Math.floor(extent[0] / step) * step, extent[1] = Math.ceil(extent[1] / step) * step, tick = extent[0]; tick <= extent[1];) {\n      v = tick == extent[0] ? this.clearMinValue : tick == extent[1] ? this.clearMaxValue : tick, ticks.push({\n        label: tick,\n        value: this.getValue(v)\n      }), tick += step;\n    }\n\n    return ticks;\n  }\n}, jvm.ColorScale = function () {\n  jvm.ColorScale.parentClass.apply(this, arguments);\n}, jvm.inherits(jvm.ColorScale, jvm.NumericScale), jvm.ColorScale.prototype.setScale = function (scale) {\n  var i;\n\n  for (i = 0; i < scale.length; i++) {\n    this.scale[i] = jvm.ColorScale.rgbToArray(scale[i]);\n  }\n}, jvm.ColorScale.prototype.getValue = function (value) {\n  return jvm.ColorScale.numToRgb(jvm.ColorScale.parentClass.prototype.getValue.call(this, value));\n}, jvm.ColorScale.arrayToRgb = function (ar) {\n  var d,\n      i,\n      rgb = \"#\";\n\n  for (i = 0; i < ar.length; i++) {\n    d = ar[i].toString(16), rgb += 1 == d.length ? \"0\" + d : d;\n  }\n\n  return rgb;\n}, jvm.ColorScale.numToRgb = function (num) {\n  for (num = num.toString(16); num.length < 6;) {\n    num = \"0\" + num;\n  }\n\n  return \"#\" + num;\n}, jvm.ColorScale.rgbToArray = function (rgb) {\n  return rgb = rgb.substr(1), [parseInt(rgb.substr(0, 2), 16), parseInt(rgb.substr(2, 2), 16), parseInt(rgb.substr(4, 2), 16)];\n}, jvm.Legend = function (params) {\n  this.params = params || {}, this.map = this.params.map, this.series = this.params.series, this.body = jvm.$(\"<div/>\"), this.body.addClass(\"jvectormap-legend\"), this.params.cssClass && this.body.addClass(this.params.cssClass), params.vertical ? this.map.legendCntVertical.append(this.body) : this.map.legendCntHorizontal.append(this.body), this.render();\n}, jvm.Legend.prototype.render = function () {\n  var i,\n      tick,\n      sample,\n      label,\n      ticks = this.series.scale.getTicks(),\n      inner = jvm.$(\"<div/>\").addClass(\"jvectormap-legend-inner\");\n\n  for (this.body.html(\"\"), this.params.title && this.body.append(jvm.$(\"<div/>\").addClass(\"jvectormap-legend-title\").html(this.params.title)), this.body.append(inner), i = 0; i < ticks.length; i++) {\n    switch (tick = jvm.$(\"<div/>\").addClass(\"jvectormap-legend-tick\"), sample = jvm.$(\"<div/>\").addClass(\"jvectormap-legend-tick-sample\"), this.series.params.attribute) {\n      case \"fill\":\n        jvm.isImageUrl(ticks[i].value) ? sample.css(\"background\", \"url(\" + ticks[i].value + \")\") : sample.css(\"background\", ticks[i].value);\n        break;\n\n      case \"stroke\":\n        sample.css(\"background\", ticks[i].value);\n        break;\n\n      case \"image\":\n        sample.css(\"background\", \"url(\" + ticks[i].value + \") no-repeat center center\");\n        break;\n\n      case \"r\":\n        jvm.$(\"<div/>\").css({\n          \"border-radius\": ticks[i].value,\n          border: this.map.params.markerStyle.initial[\"stroke-width\"] + \"px \" + this.map.params.markerStyle.initial.stroke + \" solid\",\n          width: 2 * ticks[i].value + \"px\",\n          height: 2 * ticks[i].value + \"px\",\n          background: this.map.params.markerStyle.initial.fill\n        }).appendTo(sample);\n    }\n\n    tick.append(sample), label = ticks[i].label, this.params.labelRender && (label = this.params.labelRender(label)), tick.append(jvm.$(\"<div>\" + label + \" </div>\").addClass(\"jvectormap-legend-tick-text\")), inner.append(tick);\n  }\n\n  inner.append(jvm.$(\"<div/>\").css(\"clear\", \"both\"));\n}, jvm.DataSeries = function (params, elements, map) {\n  var scaleConstructor;\n  params = params || {}, params.attribute = params.attribute || \"fill\", this.elements = elements, this.params = params, this.map = map, params.attributes && this.setAttributes(params.attributes), jvm.$.isArray(params.scale) ? (scaleConstructor = \"fill\" === params.attribute || \"stroke\" === params.attribute ? jvm.ColorScale : jvm.NumericScale, this.scale = new scaleConstructor(params.scale, params.normalizeFunction, params.min, params.max)) : this.scale = params.scale ? new jvm.OrdinalScale(params.scale) : new jvm.SimpleScale(params.scale), this.values = params.values || {}, this.setValues(this.values), this.params.legend && (this.legend = new jvm.Legend($.extend({\n    map: this.map,\n    series: this\n  }, this.params.legend)));\n}, jvm.DataSeries.prototype = {\n  setAttributes: function setAttributes(key, attr) {\n    var code,\n        attrs = key;\n    if (\"string\" == typeof key) this.elements[key] && this.elements[key].setStyle(this.params.attribute, attr);else for (code in attrs) {\n      this.elements[code] && this.elements[code].element.setStyle(this.params.attribute, attrs[code]);\n    }\n  },\n  setValues: function setValues(values) {\n    var val,\n        cc,\n        max = -Number.MAX_VALUE,\n        min = Number.MAX_VALUE,\n        attrs = {};\n    if (this.scale instanceof jvm.OrdinalScale || this.scale instanceof jvm.SimpleScale) for (cc in values) {\n      attrs[cc] = values[cc] ? this.scale.getValue(values[cc]) : this.elements[cc].element.style.initial[this.params.attribute];\n    } else {\n      if (\"undefined\" == typeof this.params.min || \"undefined\" == typeof this.params.max) for (cc in values) {\n        val = parseFloat(values[cc]), val > max && (max = val), min > val && (min = val);\n      }\n      \"undefined\" == typeof this.params.min ? (this.scale.setMin(min), this.params.min = min) : this.scale.setMin(this.params.min), \"undefined\" == typeof this.params.max ? (this.scale.setMax(max), this.params.max = max) : this.scale.setMax(this.params.max);\n\n      for (cc in values) {\n        \"indexOf\" != cc && (val = parseFloat(values[cc]), attrs[cc] = isNaN(val) ? this.elements[cc].element.style.initial[this.params.attribute] : this.scale.getValue(val));\n      }\n    }\n    this.setAttributes(attrs), jvm.$.extend(this.values, values);\n  },\n  clear: function clear() {\n    var key,\n        attrs = {};\n\n    for (key in this.values) {\n      this.elements[key] && (attrs[key] = this.elements[key].element.shape.style.initial[this.params.attribute]);\n    }\n\n    this.setAttributes(attrs), this.values = {};\n  },\n  setScale: function setScale(scale) {\n    this.scale.setScale(scale), this.values && this.setValues(this.values);\n  },\n  setNormalizeFunction: function setNormalizeFunction(f) {\n    this.scale.setNormalizeFunction(f), this.values && this.setValues(this.values);\n  }\n}, jvm.Proj = {\n  degRad: 180 / Math.PI,\n  radDeg: Math.PI / 180,\n  radius: 6381372,\n  sgn: function sgn(n) {\n    return n > 0 ? 1 : 0 > n ? -1 : n;\n  },\n  mill: function mill(lat, lng, c) {\n    return {\n      x: this.radius * (lng - c) * this.radDeg,\n      y: -this.radius * Math.log(Math.tan((45 + .4 * lat) * this.radDeg)) / .8\n    };\n  },\n  mill_inv: function mill_inv(x, y, c) {\n    return {\n      lat: (2.5 * Math.atan(Math.exp(.8 * y / this.radius)) - 5 * Math.PI / 8) * this.degRad,\n      lng: (c * this.radDeg + x / this.radius) * this.degRad\n    };\n  },\n  merc: function merc(lat, lng, c) {\n    return {\n      x: this.radius * (lng - c) * this.radDeg,\n      y: -this.radius * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))\n    };\n  },\n  merc_inv: function merc_inv(x, y, c) {\n    return {\n      lat: (2 * Math.atan(Math.exp(y / this.radius)) - Math.PI / 2) * this.degRad,\n      lng: (c * this.radDeg + x / this.radius) * this.degRad\n    };\n  },\n  aea: function aea(lat, lng, c) {\n    var fi0 = 0,\n        lambda0 = c * this.radDeg,\n        fi1 = 29.5 * this.radDeg,\n        fi2 = 45.5 * this.radDeg,\n        fi = lat * this.radDeg,\n        lambda = lng * this.radDeg,\n        n = (Math.sin(fi1) + Math.sin(fi2)) / 2,\n        C = Math.cos(fi1) * Math.cos(fi1) + 2 * n * Math.sin(fi1),\n        theta = n * (lambda - lambda0),\n        ro = Math.sqrt(C - 2 * n * Math.sin(fi)) / n,\n        ro0 = Math.sqrt(C - 2 * n * Math.sin(fi0)) / n;\n    return {\n      x: ro * Math.sin(theta) * this.radius,\n      y: -(ro0 - ro * Math.cos(theta)) * this.radius\n    };\n  },\n  aea_inv: function aea_inv(xCoord, yCoord, c) {\n    var x = xCoord / this.radius,\n        y = yCoord / this.radius,\n        fi0 = 0,\n        lambda0 = c * this.radDeg,\n        fi1 = 29.5 * this.radDeg,\n        fi2 = 45.5 * this.radDeg,\n        n = (Math.sin(fi1) + Math.sin(fi2)) / 2,\n        C = Math.cos(fi1) * Math.cos(fi1) + 2 * n * Math.sin(fi1),\n        ro0 = Math.sqrt(C - 2 * n * Math.sin(fi0)) / n,\n        ro = Math.sqrt(x * x + (ro0 - y) * (ro0 - y)),\n        theta = Math.atan(x / (ro0 - y));\n    return {\n      lat: Math.asin((C - ro * ro * n * n) / (2 * n)) * this.degRad,\n      lng: (lambda0 + theta / n) * this.degRad\n    };\n  },\n  lcc: function lcc(lat, lng, c) {\n    var fi0 = 0,\n        lambda0 = c * this.radDeg,\n        lambda = lng * this.radDeg,\n        fi1 = 33 * this.radDeg,\n        fi2 = 45 * this.radDeg,\n        fi = lat * this.radDeg,\n        n = Math.log(Math.cos(fi1) * (1 / Math.cos(fi2))) / Math.log(Math.tan(Math.PI / 4 + fi2 / 2) * (1 / Math.tan(Math.PI / 4 + fi1 / 2))),\n        F = Math.cos(fi1) * Math.pow(Math.tan(Math.PI / 4 + fi1 / 2), n) / n,\n        ro = F * Math.pow(1 / Math.tan(Math.PI / 4 + fi / 2), n),\n        ro0 = F * Math.pow(1 / Math.tan(Math.PI / 4 + fi0 / 2), n);\n    return {\n      x: ro * Math.sin(n * (lambda - lambda0)) * this.radius,\n      y: -(ro0 - ro * Math.cos(n * (lambda - lambda0))) * this.radius\n    };\n  },\n  lcc_inv: function lcc_inv(xCoord, yCoord, c) {\n    var x = xCoord / this.radius,\n        y = yCoord / this.radius,\n        fi0 = 0,\n        lambda0 = c * this.radDeg,\n        fi1 = 33 * this.radDeg,\n        fi2 = 45 * this.radDeg,\n        n = Math.log(Math.cos(fi1) * (1 / Math.cos(fi2))) / Math.log(Math.tan(Math.PI / 4 + fi2 / 2) * (1 / Math.tan(Math.PI / 4 + fi1 / 2))),\n        F = Math.cos(fi1) * Math.pow(Math.tan(Math.PI / 4 + fi1 / 2), n) / n,\n        ro0 = F * Math.pow(1 / Math.tan(Math.PI / 4 + fi0 / 2), n),\n        ro = this.sgn(n) * Math.sqrt(x * x + (ro0 - y) * (ro0 - y)),\n        theta = Math.atan(x / (ro0 - y));\n    return {\n      lat: (2 * Math.atan(Math.pow(F / ro, 1 / n)) - Math.PI / 2) * this.degRad,\n      lng: (lambda0 + theta / n) * this.degRad\n    };\n  }\n}, jvm.MapObject = function () {}, jvm.MapObject.prototype.getLabelText = function (key) {\n  var text;\n  return text = this.config.label ? \"function\" == typeof this.config.label.render ? this.config.label.render(key) : key : null;\n}, jvm.MapObject.prototype.getLabelOffsets = function (key) {\n  var offsets;\n  return this.config.label && (\"function\" == typeof this.config.label.offsets ? offsets = this.config.label.offsets(key) : \"object\" == typeof this.config.label.offsets && (offsets = this.config.label.offsets[key])), offsets || [0, 0];\n}, jvm.MapObject.prototype.setHovered = function (isHovered) {\n  this.isHovered !== isHovered && (this.isHovered = isHovered, this.shape.isHovered = isHovered, this.shape.updateStyle(), this.label && (this.label.isHovered = isHovered, this.label.updateStyle()));\n}, jvm.MapObject.prototype.setSelected = function (isSelected) {\n  this.isSelected !== isSelected && (this.isSelected = isSelected, this.shape.isSelected = isSelected, this.shape.updateStyle(), this.label && (this.label.isSelected = isSelected, this.label.updateStyle()), jvm.$(this.shape).trigger(\"selected\", [isSelected]));\n}, jvm.MapObject.prototype.setStyle = function () {\n  this.shape.setStyle.apply(this.shape, arguments);\n}, jvm.MapObject.prototype.remove = function () {\n  this.shape.remove(), this.label && this.label.remove();\n}, jvm.Region = function (config) {\n  var bbox, text, offsets, wrapper;\n  this.config = config, this.map = this.config.map, wrapper = config.canvas.addGroup(config.canvas.rootElement), this.shape = config.canvas.addPath({\n    d: config.path\n  }, config.style, wrapper);\n  var invisibleShape = config.canvas.addPath({\n    d: config.path,\n    \"data-code\": config.code\n  }, {\n    initial: {\n      fill: \"transparent\",\n      stroke: \"transparent\",\n      \"stroke-width\": config.margin\n    }\n  }, wrapper);\n  invisibleShape.addClass(\"jvectormap-region jvectormap-element\"), bbox = this.shape.getBBox(), text = this.getLabelText(config.code), this.config.label && text && (offsets = this.getLabelOffsets(config.code), this.labelX = bbox.x + bbox.width / 2 + offsets[0], this.labelY = bbox.y + bbox.height / 2 + offsets[1], this.label = config.canvas.addText({\n    text: text,\n    \"text-anchor\": \"middle\",\n    \"alignment-baseline\": \"central\",\n    x: this.labelX,\n    y: this.labelY,\n    \"data-code\": config.code\n  }, config.labelStyle, config.labelsGroup), this.label.addClass(\"jvectormap-region jvectormap-element\"));\n}, jvm.inherits(jvm.Region, jvm.MapObject), jvm.Region.prototype.updateLabelPosition = function () {\n  this.label && this.label.set({\n    x: this.labelX * this.map.scale + this.map.transX * this.map.scale,\n    y: this.labelY * this.map.scale + this.map.transY * this.map.scale\n  });\n}, jvm.Marker = function (config) {\n  var text;\n  this.config = config, this.map = this.config.map, this.isImage = !!this.config.style.initial.image, this.createShape(), text = this.getLabelText(config.index), this.config.label && text && (this.offsets = this.getLabelOffsets(config.index), this.labelX = config.cx / this.map.scale - this.map.transX, this.labelY = config.cy / this.map.scale - this.map.transY, this.label = config.canvas.addText({\n    text: text,\n    \"data-index\": config.index,\n    dy: \"0.6ex\",\n    x: this.labelX,\n    y: this.labelY\n  }, config.labelStyle, config.labelsGroup), this.label.addClass(\"jvectormap-marker jvectormap-element\"));\n}, jvm.inherits(jvm.Marker, jvm.MapObject), jvm.Marker.prototype.createShape = function () {\n  var that = this;\n  this.shape && this.shape.remove(), this.shape = this.config.canvas[this.isImage ? \"addImage\" : \"addCircle\"]({\n    \"data-index\": this.config.index,\n    cx: this.config.cx,\n    cy: this.config.cy\n  }, this.config.style, this.config.group), this.shape.addClass(\"jvectormap-marker jvectormap-element\"), this.isImage && jvm.$(this.shape.node).on(\"imageloaded\", function () {\n    that.updateLabelPosition();\n  });\n}, jvm.Marker.prototype.updateLabelPosition = function () {\n  this.label && this.label.set({\n    x: this.labelX * this.map.scale + this.offsets[0] + this.map.transX * this.map.scale + 5 + (this.isImage ? (this.shape.width || 0) / 2 : this.shape.properties.r),\n    y: this.labelY * this.map.scale + this.map.transY * this.map.scale + this.offsets[1]\n  });\n}, jvm.Marker.prototype.setStyle = function (property) {\n  var isImage;\n  jvm.Marker.parentClass.prototype.setStyle.apply(this, arguments), \"r\" === property && this.updateLabelPosition(), isImage = !!this.shape.get(\"image\"), isImage != this.isImage && (this.isImage = isImage, this.config.style = jvm.$.extend(!0, {}, this.shape.style), this.createShape());\n}, jvm.Map = function (params) {\n  var e,\n      map = this;\n  if (this.params = jvm.$.extend(!0, {}, jvm.Map.defaultParams, params), !jvm.Map.maps[this.params.map]) throw new Error(\"Attempt to use map which was not loaded: \" + this.params.map);\n  this.mapData = jvm.Map.maps[this.params.map], this.markers = {}, this.regions = {}, this.regionsColors = {}, this.regionsData = {}, this.container = jvm.$(\"<div>\").addClass(\"jvectormap-container\"), this.params.container && this.params.container.append(this.container), this.container.data(\"mapObject\", this), this.defaultWidth = this.mapData.width, this.defaultHeight = this.mapData.height, this.setBackgroundColor(this.params.backgroundColor), this.onResize = function () {\n    map.updateSize();\n  }, jvm.$(window).resize(this.onResize);\n\n  for (e in jvm.Map.apiEvents) {\n    this.params[e] && this.container.bind(jvm.Map.apiEvents[e] + \".jvectormap\", this.params[e]);\n  }\n\n  this.canvas = new jvm.VectorCanvas(this.container[0], this.width, this.height), this.params.bindTouchEvents && (\"ontouchstart\" in window || window.DocumentTouch && document instanceof DocumentTouch ? this.bindContainerTouchEvents() : window.MSGesture && this.bindContainerPointerEvents()), this.bindContainerEvents(), this.bindElementEvents(), this.createTip(), this.params.zoomButtons && this.bindZoomButtons(), this.createRegions(), this.createMarkers(this.params.markers || {}), this.updateSize(), this.params.focusOn && (\"string\" == typeof this.params.focusOn ? this.params.focusOn = {\n    region: this.params.focusOn\n  } : jvm.$.isArray(this.params.focusOn) && (this.params.focusOn = {\n    regions: this.params.focusOn\n  }), this.setFocus(this.params.focusOn)), this.params.selectedRegions && this.setSelectedRegions(this.params.selectedRegions), this.params.selectedMarkers && this.setSelectedMarkers(this.params.selectedMarkers), this.legendCntHorizontal = jvm.$(\"<div/>\").addClass(\"jvectormap-legend-cnt jvectormap-legend-cnt-h\"), this.legendCntVertical = jvm.$(\"<div/>\").addClass(\"jvectormap-legend-cnt jvectormap-legend-cnt-v\"), this.container.append(this.legendCntHorizontal), this.container.append(this.legendCntVertical), this.params.series && this.createSeries();\n}, jvm.Map.prototype = {\n  transX: 0,\n  transY: 0,\n  scale: 1,\n  baseTransX: 0,\n  baseTransY: 0,\n  baseScale: 1,\n  width: 0,\n  height: 0,\n  setBackgroundColor: function setBackgroundColor(backgroundColor) {\n    this.container.css(\"background-color\", backgroundColor);\n  },\n  resize: function resize() {\n    var curBaseScale = this.baseScale;\n    this.width / this.height > this.defaultWidth / this.defaultHeight ? (this.baseScale = this.height / this.defaultHeight, this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale)) : (this.baseScale = this.width / this.defaultWidth, this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale)), this.scale *= this.baseScale / curBaseScale, this.transX *= this.baseScale / curBaseScale, this.transY *= this.baseScale / curBaseScale;\n  },\n  updateSize: function updateSize() {\n    this.width = this.container.width(), this.height = this.container.height(), this.resize(), this.canvas.setSize(this.width, this.height), this.applyTransform();\n  },\n  reset: function reset() {\n    var key, i;\n\n    for (key in this.series) {\n      for (i = 0; i < this.series[key].length; i++) {\n        this.series[key][i].clear();\n      }\n    }\n\n    this.scale = this.baseScale, this.transX = this.baseTransX, this.transY = this.baseTransY, this.applyTransform();\n  },\n  applyTransform: function applyTransform() {\n    var maxTransX, maxTransY, minTransX, minTransY;\n    this.defaultWidth * this.scale <= this.width ? (maxTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale), minTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale)) : (maxTransX = 0, minTransX = (this.width - this.defaultWidth * this.scale) / this.scale), this.defaultHeight * this.scale <= this.height ? (maxTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale), minTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale)) : (maxTransY = 0, minTransY = (this.height - this.defaultHeight * this.scale) / this.scale), this.transY > maxTransY ? this.transY = maxTransY : this.transY < minTransY && (this.transY = minTransY), this.transX > maxTransX ? this.transX = maxTransX : this.transX < minTransX && (this.transX = minTransX), this.canvas.applyTransformParams(this.scale, this.transX, this.transY), this.markers && this.repositionMarkers(), this.repositionLabels(), this.container.trigger(\"viewportChange\", [this.scale / this.baseScale, this.transX, this.transY]);\n  },\n  bindContainerEvents: function bindContainerEvents() {\n    var oldPageX,\n        oldPageY,\n        mouseDown = !1,\n        map = this;\n    this.params.panOnDrag && (this.container.mousemove(function (e) {\n      return mouseDown && (map.transX -= (oldPageX - e.pageX) / map.scale, map.transY -= (oldPageY - e.pageY) / map.scale, map.applyTransform(), oldPageX = e.pageX, oldPageY = e.pageY), !1;\n    }).mousedown(function (e) {\n      return mouseDown = !0, oldPageX = e.pageX, oldPageY = e.pageY, !1;\n    }), this.onContainerMouseUp = function () {\n      mouseDown = !1;\n    }, jvm.$(\"body\").mouseup(this.onContainerMouseUp)), this.params.zoomOnScroll && this.container.mousewheel(function (event) {\n      var offset = jvm.$(map.container).offset(),\n          centerX = event.pageX - offset.left,\n          centerY = event.pageY - offset.top,\n          zoomStep = Math.pow(1 + map.params.zoomOnScrollSpeed / 1e3, event.deltaFactor * event.deltaY);\n      map.tip.hide(), map.setScale(map.scale * zoomStep, centerX, centerY), event.preventDefault();\n    });\n  },\n  bindContainerTouchEvents: function bindContainerTouchEvents() {\n    var touchStartScale,\n        touchStartDistance,\n        touchX,\n        touchY,\n        centerTouchX,\n        centerTouchY,\n        lastTouchesLength,\n        map = this,\n        handleTouchEvent = function handleTouchEvent(e) {\n      var offset,\n          scale,\n          transXOld,\n          transYOld,\n          touches = e.originalEvent.touches;\n      \"touchstart\" == e.type && (lastTouchesLength = 0), 1 == touches.length ? (1 == lastTouchesLength && (transXOld = map.transX, transYOld = map.transY, map.transX -= (touchX - touches[0].pageX) / map.scale, map.transY -= (touchY - touches[0].pageY) / map.scale, map.applyTransform(), map.tip.hide(), (transXOld != map.transX || transYOld != map.transY) && e.preventDefault()), touchX = touches[0].pageX, touchY = touches[0].pageY) : 2 == touches.length && (2 == lastTouchesLength ? (scale = Math.sqrt(Math.pow(touches[0].pageX - touches[1].pageX, 2) + Math.pow(touches[0].pageY - touches[1].pageY, 2)) / touchStartDistance, map.setScale(touchStartScale * scale, centerTouchX, centerTouchY), map.tip.hide(), e.preventDefault()) : (offset = jvm.$(map.container).offset(), centerTouchX = touches[0].pageX > touches[1].pageX ? touches[1].pageX + (touches[0].pageX - touches[1].pageX) / 2 : touches[0].pageX + (touches[1].pageX - touches[0].pageX) / 2, centerTouchY = touches[0].pageY > touches[1].pageY ? touches[1].pageY + (touches[0].pageY - touches[1].pageY) / 2 : touches[0].pageY + (touches[1].pageY - touches[0].pageY) / 2, centerTouchX -= offset.left, centerTouchY -= offset.top, touchStartScale = map.scale, touchStartDistance = Math.sqrt(Math.pow(touches[0].pageX - touches[1].pageX, 2) + Math.pow(touches[0].pageY - touches[1].pageY, 2)))), lastTouchesLength = touches.length;\n    };\n\n    jvm.$(this.container).bind(\"touchstart\", handleTouchEvent), jvm.$(this.container).bind(\"touchmove\", handleTouchEvent);\n  },\n  bindContainerPointerEvents: function bindContainerPointerEvents() {\n    var map = this,\n        gesture = new MSGesture(),\n        element = this.container[0],\n        handlePointerDownEvent = function handlePointerDownEvent(e) {\n      gesture.addPointer(e.pointerId);\n    },\n        handleGestureEvent = function handleGestureEvent(e) {\n      var transXOld, transYOld;\n      (0 != e.translationX || 0 != e.translationY) && (transXOld = map.transX, transYOld = map.transY, map.transX += e.translationX / map.scale, map.transY += e.translationY / map.scale, map.applyTransform(), map.tip.hide(), (transXOld != map.transX || transYOld != map.transY) && e.preventDefault()), 1 != e.scale && (map.setScale(map.scale * e.scale, e.offsetX, e.offsetY), map.tip.hide(), e.preventDefault());\n    };\n\n    gesture.target = element, element.addEventListener(\"MSGestureChange\", handleGestureEvent, !1), element.addEventListener(\"pointerdown\", handlePointerDownEvent, !1);\n  },\n  bindElementEvents: function bindElementEvents() {\n    var pageX,\n        pageY,\n        mouseMoved,\n        map = this;\n    this.container.mousemove(function (e) {\n      Math.abs(pageX - e.pageX) + Math.abs(pageY - e.pageY) > 2 && (mouseMoved = !0);\n    }), this.container.delegate(\"[class~='jvectormap-element']\", \"mouseover mouseout\", function (e) {\n      var baseVal = jvm.$(this).attr(\"class\").baseVal || jvm.$(this).attr(\"class\"),\n          type = -1 === baseVal.indexOf(\"jvectormap-region\") ? \"marker\" : \"region\",\n          code = jvm.$(this).attr(\"region\" == type ? \"data-code\" : \"data-index\"),\n          element = \"region\" == type ? map.regions[code].element : map.markers[code].element,\n          tipText = \"region\" == type ? map.mapData.paths[code].name : map.markers[code].config.name || \"\",\n          tipShowEvent = jvm.$.Event(type + \"TipShow.jvectormap\"),\n          overEvent = jvm.$.Event(type + \"Over.jvectormap\");\n      \"mouseover\" == e.type ? (map.container.trigger(overEvent, [code]), overEvent.isDefaultPrevented() || element.setHovered(!0), map.tip.text(tipText), map.container.trigger(tipShowEvent, [map.tip, code]), tipShowEvent.isDefaultPrevented() || (map.tip.show(), map.tipWidth = map.tip.width(), map.tipHeight = map.tip.height())) : (element.setHovered(!1), map.tip.hide(), map.container.trigger(type + \"Out.jvectormap\", [code]));\n    }), this.container.delegate(\"[class~='jvectormap-element']\", \"mousedown\", function (e) {\n      pageX = e.pageX, pageY = e.pageY, mouseMoved = !1;\n    }), this.container.delegate(\"[class~='jvectormap-element']\", \"mouseup\", function () {\n      var baseVal = jvm.$(this).attr(\"class\").baseVal ? jvm.$(this).attr(\"class\").baseVal : jvm.$(this).attr(\"class\"),\n          type = -1 === baseVal.indexOf(\"jvectormap-region\") ? \"marker\" : \"region\",\n          code = jvm.$(this).attr(\"region\" == type ? \"data-code\" : \"data-index\"),\n          clickEvent = jvm.$.Event(type + \"Click.jvectormap\"),\n          element = \"region\" == type ? map.regions[code].element : map.markers[code].element;\n      mouseMoved || (map.container.trigger(clickEvent, [code]), (\"region\" === type && map.params.regionsSelectable || \"marker\" === type && map.params.markersSelectable) && (clickEvent.isDefaultPrevented() || (map.params[type + \"sSelectableOne\"] && map.clearSelected(type + \"s\"), element.setSelected(!element.isSelected))));\n    });\n  },\n  bindZoomButtons: function bindZoomButtons() {\n    var map = this;\n    jvm.$(\"<div/>\").addClass(\"jvectormap-zoomin\").text(\"+\").appendTo(this.container), jvm.$(\"<div/>\").addClass(\"jvectormap-zoomout\").html(\"&#x2212;\").appendTo(this.container), this.container.find(\".jvectormap-zoomin\").click(function () {\n      map.setScale(map.scale * map.params.zoomStep, map.width / 2, map.height / 2, !1, map.params.zoomAnimate);\n    }), this.container.find(\".jvectormap-zoomout\").click(function () {\n      map.setScale(map.scale / map.params.zoomStep, map.width / 2, map.height / 2, !1, map.params.zoomAnimate);\n    });\n  },\n  createTip: function createTip() {\n    var map = this;\n    this.tip = jvm.$(\"<div/>\").addClass(\"jvectormap-tip\").appendTo(jvm.$(\"body\")), this.container.mousemove(function (e) {\n      var left = e.pageX - 15 - map.tipWidth,\n          top = e.pageY - 15 - map.tipHeight;\n      5 > left && (left = e.pageX + 15), 5 > top && (top = e.pageY + 15), map.tip.css({\n        left: left,\n        top: top\n      });\n    });\n  },\n  setScale: function setScale(scale, anchorX, anchorY, isCentered, animate) {\n    var interval,\n        scaleStart,\n        scaleDiff,\n        transXStart,\n        transXDiff,\n        transYStart,\n        transYDiff,\n        transX,\n        transY,\n        viewportChangeEvent = jvm.$.Event(\"zoom.jvectormap\"),\n        that = this,\n        i = 0,\n        count = Math.abs(Math.round(60 * (scale - this.scale) / Math.max(scale, this.scale))),\n        deferred = new jvm.$.Deferred();\n    return scale > this.params.zoomMax * this.baseScale ? scale = this.params.zoomMax * this.baseScale : scale < this.params.zoomMin * this.baseScale && (scale = this.params.zoomMin * this.baseScale), \"undefined\" != typeof anchorX && \"undefined\" != typeof anchorY && (zoomStep = scale / this.scale, isCentered ? (transX = anchorX + this.defaultWidth * (this.width / (this.defaultWidth * scale)) / 2, transY = anchorY + this.defaultHeight * (this.height / (this.defaultHeight * scale)) / 2) : (transX = this.transX - (zoomStep - 1) / scale * anchorX, transY = this.transY - (zoomStep - 1) / scale * anchorY)), animate && count > 0 ? (scaleStart = this.scale, scaleDiff = (scale - scaleStart) / count, transXStart = this.transX * this.scale, transYStart = this.transY * this.scale, transXDiff = (transX * scale - transXStart) / count, transYDiff = (transY * scale - transYStart) / count, interval = setInterval(function () {\n      i += 1, that.scale = scaleStart + scaleDiff * i, that.transX = (transXStart + transXDiff * i) / that.scale, that.transY = (transYStart + transYDiff * i) / that.scale, that.applyTransform(), i == count && (clearInterval(interval), that.container.trigger(viewportChangeEvent, [scale / that.baseScale]), deferred.resolve());\n    }, 10)) : (this.transX = transX, this.transY = transY, this.scale = scale, this.applyTransform(), this.container.trigger(viewportChangeEvent, [scale / this.baseScale]), deferred.resolve()), deferred;\n  },\n  setFocus: function setFocus(config) {\n    var bbox, itemBbox, newBbox, codes, i, point;\n\n    if (config = config || {}, config.region ? codes = [config.region] : config.regions && (codes = config.regions), codes) {\n      for (i = 0; i < codes.length; i++) {\n        this.regions[codes[i]] && (itemBbox = this.regions[codes[i]].element.shape.getBBox(), itemBbox && (\"undefined\" == typeof bbox ? bbox = itemBbox : (newBbox = {\n          x: Math.min(bbox.x, itemBbox.x),\n          y: Math.min(bbox.y, itemBbox.y),\n          width: Math.max(bbox.x + bbox.width, itemBbox.x + itemBbox.width) - Math.min(bbox.x, itemBbox.x),\n          height: Math.max(bbox.y + bbox.height, itemBbox.y + itemBbox.height) - Math.min(bbox.y, itemBbox.y)\n        }, bbox = newBbox)));\n      }\n\n      return this.setScale(Math.min(this.width / bbox.width, this.height / bbox.height), -(bbox.x + bbox.width / 2), -(bbox.y + bbox.height / 2), !0, config.animate);\n    }\n\n    return config.lat && config.lng ? (point = this.latLngToPoint(config.lat, config.lng), config.x = this.transX - point.x / this.scale, config.y = this.transY - point.y / this.scale) : config.x && config.y && (config.x *= -this.defaultWidth, config.y *= -this.defaultHeight), this.setScale(config.scale * this.baseScale, config.x, config.y, !0, config.animate);\n  },\n  getSelected: function getSelected(type) {\n    var key,\n        selected = [];\n\n    for (key in this[type]) {\n      this[type][key].element.isSelected && selected.push(key);\n    }\n\n    return selected;\n  },\n  getSelectedRegions: function getSelectedRegions() {\n    return this.getSelected(\"regions\");\n  },\n  getSelectedMarkers: function getSelectedMarkers() {\n    return this.getSelected(\"markers\");\n  },\n  setSelected: function setSelected(type, keys) {\n    var i;\n    if (\"object\" != typeof keys && (keys = [keys]), jvm.$.isArray(keys)) for (i = 0; i < keys.length; i++) {\n      this[type][keys[i]].element.setSelected(!0);\n    } else for (i in keys) {\n      this[type][i].element.setSelected(!!keys[i]);\n    }\n  },\n  setSelectedRegions: function setSelectedRegions(keys) {\n    this.setSelected(\"regions\", keys);\n  },\n  setSelectedMarkers: function setSelectedMarkers(keys) {\n    this.setSelected(\"markers\", keys);\n  },\n  clearSelected: function clearSelected(type) {\n    var i,\n        select = {},\n        selected = this.getSelected(type);\n\n    for (i = 0; i < selected.length; i++) {\n      select[selected[i]] = !1;\n    }\n\n    this.setSelected(type, select);\n  },\n  clearSelectedRegions: function clearSelectedRegions() {\n    this.clearSelected(\"regions\");\n  },\n  clearSelectedMarkers: function clearSelectedMarkers() {\n    this.clearSelected(\"markers\");\n  },\n  getMapObject: function getMapObject() {\n    return this;\n  },\n  getRegionName: function getRegionName(code) {\n    return this.mapData.paths[code].name;\n  },\n  createRegions: function createRegions() {\n    var key,\n        region,\n        map = this;\n    this.regionLabelsGroup = this.regionLabelsGroup || this.canvas.addGroup();\n\n    for (key in this.mapData.paths) {\n      region = new jvm.Region({\n        map: this,\n        path: this.mapData.paths[key].path,\n        code: key,\n        style: jvm.$.extend(!0, {}, this.params.regionStyle),\n        margin: this.params.regionMargin,\n        labelStyle: jvm.$.extend(!0, {}, this.params.regionLabelStyle),\n        canvas: this.canvas,\n        labelsGroup: this.regionLabelsGroup,\n        label: \"vml\" != this.canvas.mode ? this.params.labels && this.params.labels.regions : null\n      }), jvm.$(region.shape).bind(\"selected\", function (e, isSelected) {\n        map.container.trigger(\"regionSelected.jvectormap\", [jvm.$(this.node).attr(\"data-code\"), isSelected, map.getSelectedRegions()]);\n      }), this.regions[key] = {\n        element: region,\n        config: this.mapData.paths[key]\n      };\n    }\n  },\n  createMarkers: function createMarkers(markers) {\n    var i,\n        marker,\n        point,\n        markerConfig,\n        markersArray,\n        map = this;\n    if (this.markersGroup = this.markersGroup || this.canvas.addGroup(), this.markerLabelsGroup = this.markerLabelsGroup || this.canvas.addGroup(), jvm.$.isArray(markers)) for (markersArray = markers.slice(), markers = {}, i = 0; i < markersArray.length; i++) {\n      markers[i] = markersArray[i];\n    }\n\n    for (i in markers) {\n      markerConfig = markers[i] instanceof Array ? {\n        latLng: markers[i]\n      } : markers[i], point = this.getMarkerPosition(markerConfig), point !== !1 && (marker = new jvm.Marker({\n        map: this,\n        style: jvm.$.extend(!0, {}, this.params.markerStyle, {\n          initial: markerConfig.style || {}\n        }),\n        labelStyle: jvm.$.extend(!0, {}, this.params.markerLabelStyle),\n        index: i,\n        cx: point.x,\n        cy: point.y,\n        group: this.markersGroup,\n        canvas: this.canvas,\n        labelsGroup: this.markerLabelsGroup,\n        label: \"vml\" != this.canvas.mode ? this.params.labels && this.params.labels.markers : null\n      }), jvm.$(marker.shape).bind(\"selected\", function (e, isSelected) {\n        map.container.trigger(\"markerSelected.jvectormap\", [jvm.$(this.node).attr(\"data-index\"), isSelected, map.getSelectedMarkers()]);\n      }), this.markers[i] && this.removeMarkers([i]), this.markers[i] = {\n        element: marker,\n        config: markerConfig\n      });\n    }\n  },\n  repositionMarkers: function repositionMarkers() {\n    var i, point;\n\n    for (i in this.markers) {\n      point = this.getMarkerPosition(this.markers[i].config), point !== !1 && this.markers[i].element.setStyle({\n        cx: point.x,\n        cy: point.y\n      });\n    }\n  },\n  repositionLabels: function repositionLabels() {\n    var key;\n\n    for (key in this.regions) {\n      this.regions[key].element.updateLabelPosition();\n    }\n\n    for (key in this.markers) {\n      this.markers[key].element.updateLabelPosition();\n    }\n  },\n  getMarkerPosition: function getMarkerPosition(markerConfig) {\n    return jvm.Map.maps[this.params.map].projection ? this.latLngToPoint.apply(this, markerConfig.latLng || [0, 0]) : {\n      x: markerConfig.coords[0] * this.scale + this.transX * this.scale,\n      y: markerConfig.coords[1] * this.scale + this.transY * this.scale\n    };\n  },\n  addMarker: function addMarker(key, marker, seriesData) {\n    var values,\n        i,\n        markers = {},\n        data = [],\n        seriesData = seriesData || [];\n\n    for (markers[key] = marker, i = 0; i < seriesData.length; i++) {\n      values = {}, \"undefined\" != typeof seriesData[i] && (values[key] = seriesData[i]), data.push(values);\n    }\n\n    this.addMarkers(markers, data);\n  },\n  addMarkers: function addMarkers(markers, seriesData) {\n    var i;\n\n    for (seriesData = seriesData || [], this.createMarkers(markers), i = 0; i < seriesData.length; i++) {\n      this.series.markers[i].setValues(seriesData[i] || {});\n    }\n  },\n  removeMarkers: function removeMarkers(markers) {\n    var i;\n\n    for (i = 0; i < markers.length; i++) {\n      this.markers[markers[i]].element.remove(), delete this.markers[markers[i]];\n    }\n  },\n  removeAllMarkers: function removeAllMarkers() {\n    var i,\n        markers = [];\n\n    for (i in this.markers) {\n      markers.push(i);\n    }\n\n    this.removeMarkers(markers);\n  },\n  latLngToPoint: function latLngToPoint(lat, lng) {\n    var point,\n        inset,\n        bbox,\n        proj = jvm.Map.maps[this.params.map].projection,\n        centralMeridian = proj.centralMeridian;\n    return -180 + centralMeridian > lng && (lng += 360), point = jvm.Proj[proj.type](lat, lng, centralMeridian), inset = this.getInsetForPoint(point.x, point.y), inset ? (bbox = inset.bbox, point.x = (point.x - bbox[0].x) / (bbox[1].x - bbox[0].x) * inset.width * this.scale, point.y = (point.y - bbox[0].y) / (bbox[1].y - bbox[0].y) * inset.height * this.scale, {\n      x: point.x + this.transX * this.scale + inset.left * this.scale,\n      y: point.y + this.transY * this.scale + inset.top * this.scale\n    }) : !1;\n  },\n  pointToLatLng: function pointToLatLng(x, y) {\n    var i,\n        inset,\n        bbox,\n        nx,\n        ny,\n        proj = jvm.Map.maps[this.params.map].projection,\n        centralMeridian = proj.centralMeridian,\n        insets = jvm.Map.maps[this.params.map].insets;\n\n    for (i = 0; i < insets.length; i++) {\n      if (inset = insets[i], bbox = inset.bbox, nx = x - (this.transX * this.scale + inset.left * this.scale), ny = y - (this.transY * this.scale + inset.top * this.scale), nx = nx / (inset.width * this.scale) * (bbox[1].x - bbox[0].x) + bbox[0].x, ny = ny / (inset.height * this.scale) * (bbox[1].y - bbox[0].y) + bbox[0].y, nx > bbox[0].x && nx < bbox[1].x && ny > bbox[0].y && ny < bbox[1].y) return jvm.Proj[proj.type + \"_inv\"](nx, -ny, centralMeridian);\n    }\n\n    return !1;\n  },\n  getInsetForPoint: function getInsetForPoint(x, y) {\n    var i,\n        bbox,\n        insets = jvm.Map.maps[this.params.map].insets;\n\n    for (i = 0; i < insets.length; i++) {\n      if (bbox = insets[i].bbox, x > bbox[0].x && x < bbox[1].x && y > bbox[0].y && y < bbox[1].y) return insets[i];\n    }\n  },\n  createSeries: function createSeries() {\n    var i, key;\n    this.series = {\n      markers: [],\n      regions: []\n    };\n\n    for (key in this.params.series) {\n      for (i = 0; i < this.params.series[key].length; i++) {\n        this.series[key][i] = new jvm.DataSeries(this.params.series[key][i], this[key], this);\n      }\n    }\n  },\n  remove: function remove() {\n    this.tip.remove(), this.container.remove(), jvm.$(window).unbind(\"resize\", this.onResize), jvm.$(\"body\").unbind(\"mouseup\", this.onContainerMouseUp);\n  }\n}, jvm.Map.maps = {}, jvm.Map.defaultParams = {\n  map: \"world_mill_en\",\n  backgroundColor: \"#505050\",\n  zoomButtons: !0,\n  zoomOnScroll: !0,\n  zoomOnScrollSpeed: 3,\n  panOnDrag: !0,\n  zoomMax: 8,\n  zoomMin: 1,\n  zoomStep: 1.6,\n  zoomAnimate: !0,\n  regionsSelectable: !1,\n  markersSelectable: !1,\n  bindTouchEvents: !0,\n  regionStyle: {\n    initial: {\n      fill: \"white\",\n      \"fill-opacity\": 1,\n      stroke: \"none\",\n      \"stroke-width\": 0,\n      \"stroke-opacity\": 1\n    },\n    hover: {\n      \"fill-opacity\": .8,\n      cursor: \"pointer\"\n    },\n    selected: {\n      fill: \"yellow\"\n    },\n    selectedHover: {}\n  },\n  regionMargin: 0,\n  regionLabelStyle: {\n    initial: {\n      \"font-family\": \"Verdana\",\n      \"font-size\": \"12\",\n      \"font-weight\": \"bold\",\n      cursor: \"default\",\n      fill: \"black\"\n    },\n    hover: {\n      cursor: \"pointer\"\n    }\n  },\n  markerStyle: {\n    initial: {\n      fill: \"grey\",\n      stroke: \"#505050\",\n      \"fill-opacity\": 1,\n      \"stroke-width\": 1,\n      \"stroke-opacity\": 1,\n      r: 5\n    },\n    hover: {\n      stroke: \"black\",\n      \"stroke-width\": 2,\n      cursor: \"pointer\"\n    },\n    selected: {\n      fill: \"blue\"\n    },\n    selectedHover: {}\n  },\n  markerLabelStyle: {\n    initial: {\n      \"font-family\": \"Verdana\",\n      \"font-size\": \"12\",\n      \"font-weight\": \"bold\",\n      cursor: \"default\",\n      fill: \"black\"\n    },\n    hover: {\n      cursor: \"pointer\"\n    }\n  }\n}, jvm.Map.apiEvents = {\n  onRegionTipShow: \"regionTipShow\",\n  onRegionOver: \"regionOver\",\n  onRegionOut: \"regionOut\",\n  onRegionClick: \"regionClick\",\n  onRegionSelected: \"regionSelected\",\n  onMarkerTipShow: \"markerTipShow\",\n  onMarkerOver: \"markerOver\",\n  onMarkerOut: \"markerOut\",\n  onMarkerClick: \"markerClick\",\n  onMarkerSelected: \"markerSelected\",\n  onViewportChange: \"viewportChange\"\n}, jvm.MultiMap = function (params) {\n  var that = this;\n  this.maps = {}, this.params = jvm.$.extend(!0, {}, jvm.MultiMap.defaultParams, params), this.params.maxLevel = this.params.maxLevel || Number.MAX_VALUE, this.params.main = this.params.main || {}, this.params.main.multiMapLevel = 0, this.history = [this.addMap(this.params.main.map, this.params.main)], this.defaultProjection = this.history[0].mapData.projection.type, this.mapsLoaded = {}, this.params.container.css({\n    position: \"relative\"\n  }), this.backButton = jvm.$(\"<div/>\").addClass(\"jvectormap-goback\").text(\"Back\").appendTo(this.params.container), this.backButton.hide(), this.backButton.click(function () {\n    that.goBack();\n  }), this.spinner = jvm.$(\"<div/>\").addClass(\"jvectormap-spinner\").appendTo(this.params.container), this.spinner.hide();\n}, jvm.MultiMap.prototype = {\n  addMap: function addMap(name, config) {\n    var cnt = jvm.$(\"<div/>\").css({\n      width: \"100%\",\n      height: \"100%\"\n    });\n    return this.params.container.append(cnt), this.maps[name] = new jvm.Map(jvm.$.extend(config, {\n      container: cnt\n    })), this.params.maxLevel > config.multiMapLevel && this.maps[name].container.on(\"regionClick.jvectormap\", {\n      scope: this\n    }, function (e, code) {\n      var multimap = e.data.scope,\n          mapName = multimap.params.mapNameByCode(code, multimap);\n      multimap.drillDownPromise && \"pending\" === multimap.drillDownPromise.state() || multimap.drillDown(mapName, code);\n    }), this.maps[name];\n  },\n  downloadMap: function downloadMap(code) {\n    var that = this,\n        deferred = jvm.$.Deferred();\n    return this.mapsLoaded[code] ? deferred.resolve() : jvm.$.get(this.params.mapUrlByCode(code, this)).then(function () {\n      that.mapsLoaded[code] = !0, deferred.resolve();\n    }, function () {\n      deferred.reject();\n    }), deferred;\n  },\n  drillDown: function drillDown(name, code) {\n    var currentMap = this.history[this.history.length - 1],\n        that = this,\n        focusPromise = currentMap.setFocus({\n      region: code,\n      animate: !0\n    }),\n        downloadPromise = this.downloadMap(code);\n    focusPromise.then(function () {\n      \"pending\" === downloadPromise.state() && that.spinner.show();\n    }), downloadPromise.always(function () {\n      that.spinner.hide();\n    }), this.drillDownPromise = jvm.$.when(downloadPromise, focusPromise), this.drillDownPromise.then(function () {\n      currentMap.params.container.hide(), that.maps[name] ? that.maps[name].params.container.show() : that.addMap(name, {\n        map: name,\n        multiMapLevel: currentMap.params.multiMapLevel + 1\n      }), that.history.push(that.maps[name]), that.backButton.show();\n    });\n  },\n  goBack: function goBack() {\n    var currentMap = this.history.pop(),\n        prevMap = this.history[this.history.length - 1],\n        that = this;\n    currentMap.setFocus({\n      scale: 1,\n      x: .5,\n      y: .5,\n      animate: !0\n    }).then(function () {\n      currentMap.params.container.hide(), prevMap.params.container.show(), prevMap.updateSize(), 1 === that.history.length && that.backButton.hide(), prevMap.setFocus({\n        scale: 1,\n        x: .5,\n        y: .5,\n        animate: !0\n      });\n    });\n  }\n}, jvm.MultiMap.defaultParams = {\n  mapNameByCode: function mapNameByCode(code, multiMap) {\n    return code.toLowerCase() + \"_\" + multiMap.defaultProjection + \"_en\";\n  },\n  mapUrlByCode: function mapUrlByCode(code, multiMap) {\n    return \"jquery-jvectormap-data-\" + code.toLowerCase() + \"-\" + multiMap.defaultProjection + \"-en.js\";\n  }\n};"],"sourceRoot":""}