{"ast":null,"code":"import _classCallCheck from \"/home/mj/Programowanie/Panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mj/Programowanie/Panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mj/Programowanie/Panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mj/Programowanie/Panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mj/Programowanie/Panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mj/Programowanie/Panel/src/components/Settings.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleBoxedLayout } from \"../redux/actions/layoutActions\";\nimport { toggleStickySidebar } from \"../redux/actions/sidebarActions\";\nimport { toggleSidebar } from \"../redux/actions/sidebarActions\";\nimport { enableClassicTheme } from \"../redux/actions/themeActions\";\nimport { enableCorporateTheme } from \"../redux/actions/themeActions\";\nimport { enableModernTheme } from \"../redux/actions/themeActions\";\nimport { Badge, Button } from \"reactstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Settings as SettingsIcon } from \"react-feather\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport screenshotClassic from \"../assets/img/screenshots/theme-classic-small.png\";\nimport screenshotCorporate from \"../assets/img/screenshots/theme-corporate-small.png\";\nimport screenshotModern from \"../assets/img/screenshots/theme-modern-small.png\";\n\nvar Settings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Settings, _React$Component);\n\n  function Settings() {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Settings).call(this));\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"toggleSidebar\",\n    value: function toggleSidebar() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isOpen = this.state.isOpen;\n      var _this$props = this.props,\n          layout = _this$props.layout,\n          sidebar = _this$props.sidebar,\n          dispatch = _this$props.dispatch;\n      return React.createElement(\"div\", {\n        className: \"settings \" + (isOpen ? \"open\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"settings-toggle\",\n        onClick: function onClick() {\n          return _this2.toggleSidebar();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(SettingsIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"settings-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"settings-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(PerfectScrollbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"settings-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Button, {\n        close: true,\n        onClick: function onClick() {\n          return _this2.toggleSidebar();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Settings\")), React.createElement(\"div\", {\n        className: \"settings-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"d-block text-uppercase font-weight-bold text-muted mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Layouts\"), React.createElement(\"ul\", {\n        className: \"settings-layouts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"settings-layouts-item\",\n        onClick: function onClick() {\n          return dispatch(toggleStickySidebar(), _this2.toggleSidebar());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, sidebar.isSticky ? \"Static Sidebar\" : \"Sticky Sidebar\", React.createElement(Badge, {\n        tag: \"small\",\n        className: \"float-right mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faAngleRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"settings-layouts-item\",\n        onClick: function onClick() {\n          return dispatch(toggleSidebar(), _this2.toggleSidebar());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, sidebar.isOpen ? \"Visible Sidebar\" : \"Collapsed Sidebar\", React.createElement(Badge, {\n        tag: \"small\",\n        className: \"float-right mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faAngleRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"settings-layouts-item\",\n        onClick: function onClick() {\n          return dispatch(toggleBoxedLayout(), _this2.toggleSidebar());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, layout.isBoxed ? \"Full Layout\" : \"Boxed Layout\", React.createElement(Badge, {\n        tag: \"small\",\n        className: \"float-right mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faAngleRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"settings-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"d-block text-uppercase font-weight-bold text-muted mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Themes\"), React.createElement(\"div\", {\n        className: \"settings-theme\",\n        onClick: function onClick() {\n          return dispatch(enableClassicTheme(), _this2.toggleSidebar());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: screenshotClassic,\n        className: \"img-fluid\",\n        alt: \"Classic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-inline-block mt-1 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Classic\")), React.createElement(\"div\", {\n        className: \"settings-theme\",\n        onClick: function onClick() {\n          return dispatch(enableCorporateTheme(), _this2.toggleSidebar());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: screenshotCorporate,\n        className: \"img-fluid\",\n        alt: \"Corporate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-inline-block mt-1 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Corporate\")), React.createElement(\"div\", {\n        className: \"settings-theme\",\n        onClick: function onClick() {\n          return dispatch(enableModernTheme(), _this2.toggleSidebar());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: screenshotModern,\n        className: \"img-fluid\",\n        alt: \"Modern\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-inline-block mt-1 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Modern\")))))));\n    }\n  }]);\n\n  return Settings;\n}(React.Component);\n\nexport default connect(function (store) {\n  return {\n    layout: store.layout,\n    sidebar: store.sidebar\n  };\n})(Settings);","map":{"version":3,"sources":["/home/mj/Programowanie/Panel/src/components/Settings.js"],"names":["React","connect","toggleBoxedLayout","toggleStickySidebar","toggleSidebar","enableClassicTheme","enableCorporateTheme","enableModernTheme","Badge","Button","PerfectScrollbar","Settings","SettingsIcon","FontAwesomeIcon","faAngleRight","screenshotClassic","screenshotCorporate","screenshotModern","state","isOpen","setState","props","layout","sidebar","dispatch","isSticky","isBoxed","Component","store"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleBoxedLayout } from \"../redux/actions/layoutActions\";\r\nimport { toggleStickySidebar } from \"../redux/actions/sidebarActions\";\r\nimport { toggleSidebar } from \"../redux/actions/sidebarActions\";\r\nimport { enableClassicTheme } from \"../redux/actions/themeActions\";\r\nimport { enableCorporateTheme } from \"../redux/actions/themeActions\";\r\nimport { enableModernTheme } from \"../redux/actions/themeActions\";\r\n\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport { Settings as SettingsIcon } from \"react-feather\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport screenshotClassic from \"../assets/img/screenshots/theme-classic-small.png\";\r\nimport screenshotCorporate from \"../assets/img/screenshots/theme-corporate-small.png\";\r\nimport screenshotModern from \"../assets/img/screenshots/theme-modern-small.png\";\r\n\r\nclass Settings extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggleSidebar() {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n    const { layout, sidebar, dispatch } = this.props;\r\n\r\n    return (\r\n      <div className={\"settings \" + (isOpen ? \"open\" : \"\")}>\r\n        <div className=\"settings-toggle\" onClick={() => this.toggleSidebar()}>\r\n          <SettingsIcon />\r\n        </div>\r\n\r\n        <div className=\"settings-panel\">\r\n          <div className=\"settings-content\">\r\n            <PerfectScrollbar>\r\n              <div className=\"settings-title\">\r\n                <Button close onClick={() => this.toggleSidebar()} />\r\n\r\n                <h4>Settings</h4>\r\n              </div>\r\n\r\n              <div className=\"settings-section\">\r\n                <small className=\"d-block text-uppercase font-weight-bold text-muted mb-2\">\r\n                  Layouts\r\n                </small>\r\n\r\n                <ul className=\"settings-layouts\">\r\n                  <li>\r\n                    <span\r\n                      className=\"settings-layouts-item\"\r\n                      onClick={() =>\r\n                        dispatch(toggleStickySidebar(), this.toggleSidebar())\r\n                      }\r\n                    >\r\n                      {sidebar.isSticky ? \"Static Sidebar\" : \"Sticky Sidebar\"}\r\n                      <Badge tag=\"small\" className=\"float-right mt-1\">\r\n                        <FontAwesomeIcon icon={faAngleRight} />\r\n                      </Badge>\r\n                    </span>\r\n                  </li>\r\n                  <li>\r\n                    <span\r\n                      className=\"settings-layouts-item\"\r\n                      onClick={() =>\r\n                        dispatch(toggleSidebar(), this.toggleSidebar())\r\n                      }\r\n                    >\r\n                      {sidebar.isOpen ? \"Visible Sidebar\" : \"Collapsed Sidebar\"}\r\n                      <Badge tag=\"small\" className=\"float-right mt-1\">\r\n                        <FontAwesomeIcon icon={faAngleRight} />\r\n                      </Badge>\r\n                    </span>\r\n                  </li>\r\n                  <li>\r\n                    <span\r\n                      className=\"settings-layouts-item\"\r\n                      onClick={() =>\r\n                        dispatch(toggleBoxedLayout(), this.toggleSidebar())\r\n                      }\r\n                    >\r\n                      {layout.isBoxed ? \"Full Layout\" : \"Boxed Layout\"}\r\n                      <Badge tag=\"small\" className=\"float-right mt-1\">\r\n                        <FontAwesomeIcon icon={faAngleRight} />\r\n                      </Badge>\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"settings-section\">\r\n                <small className=\"d-block text-uppercase font-weight-bold text-muted mb-2\">\r\n                  Themes\r\n                </small>\r\n\r\n                <div\r\n                  className=\"settings-theme\"\r\n                  onClick={() =>\r\n                    dispatch(enableClassicTheme(), this.toggleSidebar())\r\n                  }\r\n                >\r\n                  <img\r\n                    src={screenshotClassic}\r\n                    className=\"img-fluid\"\r\n                    alt=\"Classic\"\r\n                  />\r\n                  <span className=\"d-inline-block mt-1 text-muted\">\r\n                    Classic\r\n                  </span>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"settings-theme\"\r\n                  onClick={() =>\r\n                    dispatch(enableCorporateTheme(), this.toggleSidebar())\r\n                  }\r\n                >\r\n                  <img\r\n                    src={screenshotCorporate}\r\n                    className=\"img-fluid\"\r\n                    alt=\"Corporate\"\r\n                  />\r\n                  <span className=\"d-inline-block mt-1 text-muted\">\r\n                    Corporate\r\n                  </span>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"settings-theme\"\r\n                  onClick={() =>\r\n                    dispatch(enableModernTheme(), this.toggleSidebar())\r\n                  }\r\n                >\r\n                  <img\r\n                    src={screenshotModern}\r\n                    className=\"img-fluid\"\r\n                    alt=\"Modern\"\r\n                  />\r\n                  <span className=\"d-inline-block mt-1 text-muted\">Modern</span>\r\n                </div>\r\n              </div>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(store => ({\r\n  layout: store.layout,\r\n  sidebar: store.sidebar\r\n}))(Settings);\r\n"]},"metadata":{},"sourceType":"module"}