{"ast":null,"code":"var _jsxFileName = \"/home/mj/Downloads/Template/src/pages/charts/Chartjs/Doughnut.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { connect } from \"react-redux\";\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\n\nvar DoughnutChart = function DoughnutChart(_ref) {\n  var theme = _ref.theme;\n  var data = {\n    labels: [\"Social\", \"Search Engines\", \"Direct\", \"Other\"],\n    datasets: [{\n      data: [260, 125, 54, 146],\n      backgroundColor: [theme.primary, theme.success, theme.warning, \"#E8EAED\"],\n      borderColor: \"transparent\"\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    cutoutPercentage: 65,\n    legend: {\n      display: false\n    }\n  };\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    tag: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Doughnut Chart\"), React.createElement(\"h6\", {\n    className: \"card-subtitle text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Doughnut charts are excellent at showing the relational proportions between data.\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart chart-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nexport default connect(function (store) {\n  return {\n    theme: store.theme.currentTheme\n  };\n})(DoughnutChart);","map":{"version":3,"sources":["/home/mj/Downloads/Template/src/pages/charts/Chartjs/Doughnut.js"],"names":["React","Doughnut","connect","Card","CardBody","CardHeader","CardTitle","DoughnutChart","theme","data","labels","datasets","backgroundColor","primary","success","warning","borderColor","options","maintainAspectRatio","cutoutPercentage","legend","display","store","currentTheme"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAsD,YAAtD;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACnC,MAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,gBAAX,EAA6B,QAA7B,EAAuC,OAAvC,CADG;AAEXC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,EAAe,GAAf,CADR;AAEEG,MAAAA,eAAe,EAAE,CACfJ,KAAK,CAACK,OADS,EAEfL,KAAK,CAACM,OAFS,EAGfN,KAAK,CAACO,OAHS,EAIf,SAJe,CAFnB;AAQEC,MAAAA,WAAW,EAAE;AARf,KADQ;AAFC,GAAb;AAgBA,MAAMC,OAAO,GAAG;AACdC,IAAAA,mBAAmB,EAAE,KADP;AAEdC,IAAAA,gBAAgB,EAAE,EAFJ;AAGdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH;AAHM,GAAhB;AAQA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAFF,CADF,EAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEZ,IAAhB;AAAsB,IAAA,OAAO,EAAEQ,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CARF,CADF;AAgBD,CAzCD;;AA2CA,eAAef,OAAO,CAAC,UAAAoB,KAAK;AAAA,SAAK;AAC/Bd,IAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYe;AADY,GAAL;AAAA,CAAN,CAAP,CAEXhB,aAFW,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nconst DoughnutChart = ({ theme }) => {\r\n  const data = {\r\n    labels: [\"Social\", \"Search Engines\", \"Direct\", \"Other\"],\r\n    datasets: [\r\n      {\r\n        data: [260, 125, 54, 146],\r\n        backgroundColor: [\r\n          theme.primary,\r\n          theme.success,\r\n          theme.warning,\r\n          \"#E8EAED\"\r\n        ],\r\n        borderColor: \"transparent\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    cutoutPercentage: 65,\r\n    legend: {\r\n      display: false\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Doughnut Chart</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Doughnut charts are excellent at showing the relational proportions\r\n          between data.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"chart chart-sm\">\r\n          <Doughnut data={data} options={options} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(store => ({\r\n  theme: store.theme.currentTheme\r\n}))(DoughnutChart);\r\n"]},"metadata":{},"sourceType":"module"}